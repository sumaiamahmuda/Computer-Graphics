#include<iostream>
using namespace std;
#include <cstdio>
#include<GL/gl.h>
#include <GL/glut.h>
#include <cmath>
#include <math.h>
#include <Windows.h>
#include <MMSystem.h>
# define PI 3.14159265358979323846


void circle(float a, float b, float r,int w,int s,int z)
{
    int i;
    int triangleAmount = 100;
    GLfloat twicePi = 2.0f * PI;
    GLfloat x=a; GLfloat y=b; GLfloat radius = r;
    glColor3ub(w,s,z);
    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(x, y);
    for(i = 0; i <= triangleAmount;i++) {
        glVertex2f( x + (radius * cos(i *  twicePi / triangleAmount)), y + (radius * sin(i * twicePi / triangleAmount)));
    }
    glEnd();
}
void circle1(float a, float b, float r)
{
    int i;
    int triangleAmount = 100;
    GLfloat twicePi = 2.0f * PI;
    GLfloat x=a; GLfloat y=b; GLfloat radius = r;

    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(x, y);
    for(i = 0; i <= triangleAmount;i++) {
        glVertex2f( x + (radius * cos(i *  twicePi / triangleAmount)), y + (radius * sin(i * twicePi / triangleAmount)));
    }
    glEnd();
}

void quad(float a, float b, float c, float d, float e, float f, float g, float h,int w,int y,int z)
{
     glBegin(GL_QUADS);
     glColor3ub(w,y,z);
     glVertex2f(a,b);
     glVertex2f(c,d);
     glVertex2f(e,f);
     glVertex2f(g,h);
     glEnd();
}
void line(float a, float b, float c, float d,int w,int y,int z)
{
     glBegin(GL_LINES);
     glColor3ub(w,y,z);
     glVertex2f(a,b);
     glVertex2f(c,d);
     glEnd();
}
void quad1(float a, float b, float c, float d, float e, float f, float g, float h)
{
     glBegin(GL_QUADS);

     glVertex2f(a,b);
     glVertex2f(c,d);
     glVertex2f(e,f);
     glVertex2f(g,h);
     glEnd();
}
void line1(float a, float b, float c, float d)
{
     glBegin(GL_LINES);

     glVertex2f(a,b);
     glVertex2f(c,d);
     glEnd();
}
void triangle(float a, float b, float c, float d, float e, float f,int w,int y,int z)
{
    glBegin(GL_TRIANGLES);
    glColor3ub(w,y,z);
    glVertex2f(a,b);
    glVertex2f(c,d);
    glVertex2f(e,f);
    glEnd();
}
void triangle1(float a, float b, float c, float d, float e, float f)
{
    glBegin(GL_TRIANGLES);

    glVertex2f(a,b);
    glVertex2f(c,d);
    glVertex2f(e,f);
    glEnd();
}

void Idle()
{

    glutPostRedisplay();//// marks the current window as needing to be redisplayed

}

void sun()
{   //glColor3ub(240, 177, 41);
    circle(1.2,0.2,.09,240, 177, 41);
}
void sunnight()
{   //glColor3ub(240, 177, 41);
    circle(1.2,0.2,.09,12, 12, 13);
}
GLfloat sunXE = 0.0f;
GLfloat sunXS = 0.004f;
GLfloat sunYE = 0.0f;
GLfloat sunYS = 0.004f;
bool Big=false;
void sunMove(int value)
{

  sunXE -= sunXS;

   if(sunYE >= 0.9)
   {
       Big=true;
   }
   if(Big)
   {
       sunYE -= sunYS;
       if(sunYE<=-0.1)
       {

           sunXE=0.0f;
           sunYE = 0.0f;
           Big=false;
       }
   }

   if(Big==false)
   {
      sunYE += sunYS;
   }

  glutPostRedisplay();
  glutTimerFunc(150, sunMove, 0);
}
void cloud()
{
    glColor3ub(255,250,245);
    circle(.8,.87,.05,255, 250, 245);
    circle(.83,.86,.04,255, 250, 245);
    circle(.85,.85,.04,255, 250, 245);
  circle(.74,.85,.04,255, 250, 245);
    circle(.77,.86,.04,255, 250, 245);
   //circle(.83,.79,.04,255, 250, 245);

    circle(-.625,.785,.04,255, 250, 245);
    circle(-.7,.8,.07,255, 250, 245);
    circle(-.79,.792,.05,255, 250, 245);
    circle(-.84,.78,.03,255, 250, 245);
}

GLfloat cloudE = 2.0f;
GLfloat cloudS = 0.003f;
void cloudMove(int value)
{
  if(cloudE < -2.0)
    cloudE = 2.0f;
  cloudE -= cloudS;
  glutPostRedisplay();
  glutTimerFunc(100, cloudMove, 0);
}

/*...... road.............*/
void road()
{
    quad(-1.0,0.1,1.0,0.1,1.0,0.31,-1.0,0.31,110, 112, 111);
    quad(-0.8,.19,-0.6,0.19,-0.6,0.2,-0.8,0.2,255, 250, 245);
    quad(-0.3,.19,-0.1,0.19,-0.1,0.2,-0.3,0.2,255, 250, 245);
    quad(0.1,.19,0.3,0.19,0.3,0.2,0.1,0.2,255, 250, 245);
    quad(0.6,.19,0.8,0.19,0.8,0.2,0.6,0.2,255, 250, 245);
    line(-1.0,0.31,1.0,0.31,255, 250, 245);
}
void roadnight()
{     glColor3ub(51, 50, 49);
    quad1(-1.0,0.1,1.0,0.1,1.0,0.31,-1.0,0.31);
    glColor3ub(255,250,245);
    quad1(-0.8,.19,-0.6,0.19,-0.6,0.2,-0.8,0.2);
    quad1(-0.3,.19,-0.1,0.19,-0.1,0.2,-0.3,0.2);
    quad1(0.1,.19,0.3,0.19,0.3,0.2,0.1,0.2);
    quad1(0.6,.19,0.8,0.19,0.8,0.2,0.6,0.2);
    line(-1.0,0.31,1.0,0.31,12, 12, 13);
}
void walkroad()
{
    quad(-1.0,0.05,1.0,0.05,1.0,0.1,-1.0,0.1,156, 130, 101);
}

void walkroadnight()
{
    quad(-1.0,0.05,1.0,0.05,1.0,0.1,-1.0,0.1,133, 127, 106);
}
void trainpiler()
{
    quad(-0.96,0.31,-0.95,0.31,-0.95,0.34,-0.96,0.34,93, 27, 102);
    quad(-0.86,.31,-.85,0.31,-.85,.34,-0.86,0.34,93, 27, 102);
    quad(-0.76,.31,-.75,0.31,-.75,.34,-0.76,0.34,93, 27, 102);
    quad(-0.66,.31,-.65,0.31,-.65,.34,-0.66,0.34,93, 27, 102);
    quad(-0.56,.31,-.55,0.31,-.55,.34,-0.56,0.34,93, 27, 102);
    quad(-0.46,.31,-.45,0.31,-.45,.34,-0.46,0.34,93, 27, 102);
    quad(-0.36,.31,-.35,0.31,-.35,.34,-0.36,0.34,93, 27, 102);
    quad(-0.26,.31,-.25,0.31,-.25,.34,-0.26,0.34,93, 27, 102);
    quad(-0.16,.31,-.15,0.31,-.15,.34,-0.16,0.34,93, 27, 102);

    quad(0.96,0.31,0.95,0.31,0.95,0.34,0.96,0.34,93, 27, 102);
    quad(0.86,.31,.85,0.31,.85,.34,0.86,0.34,93, 27, 102);
    quad(0.76,.31,.75,0.31,.75,.34,0.76,0.34,93, 27, 102);
    quad(0.66,.31,.65,0.31,.65,.34,0.66,0.34,93, 27, 102);
    quad(0.56,.31,.55,0.31,.55,.34,0.56,0.34,93, 27, 102);
    quad(.46,.31,.45,0.31,.45,.34,0.46,0.34,93, 27, 102);
    quad(0.36,.31,.35,0.31,.35,.34,0.36,0.34,93, 27, 102);
    quad(0.26,.31,.25,0.31,.25,.34,0.26,0.34,93, 27, 102);
    quad(0.16,.31,.15,0.31,.15,.34,0.16,0.34,93, 27, 102);


}

void trainpilernight()
{  glColor3ub(114, 106, 117);
    quad1(-0.96,0.31,-0.95,0.31,-0.95,0.34,-0.96,0.34);
    quad1(-0.86,.31,-.85,0.31,-.85,.34,-0.86,0.34);
    quad1(-0.76,.31,-.75,0.31,-.75,.34,-0.76,0.34);
    quad1(-0.66,.31,-.65,0.31,-.65,.34,-0.66,0.34);
    quad1(-0.56,.31,-.55,0.31,-.55,.34,-0.56,0.34);
    quad1(-0.46,.31,-.45,0.31,-.45,.34,-0.46,0.34);
    quad1(-0.36,.31,-.35,0.31,-.35,.34,-0.36,0.34);
    quad1(-0.26,.31,-.25,0.31,-.25,.34,-0.26,0.34);
    quad1(-0.16,.31,-.15,0.31,-.15,.34,-0.16,0.34);

    quad1(0.96,0.31,0.95,0.31,0.95,0.34,0.96,0.34);
    quad1(0.86,.31,.85,0.31,.85,.34,0.86,0.34);
    quad1(0.76,.31,.75,0.31,.75,.34,0.76,0.34);
    quad1(0.66,.31,.65,0.31,.65,.34,0.66,0.34);
    quad1(0.56,.31,.55,0.31,.55,.34,0.56,0.34);
    quad1(.46,.31,.45,0.31,.45,.34,0.46,0.34);
    quad1(0.36,.31,.35,0.31,.35,.34,0.36,0.34);
    quad1(0.26,.31,.25,0.31,.25,.34,0.26,0.34);
    quad1(0.16,.31,.15,0.31,.15,.34,0.16,0.34);


}

void trainline()
{

  quad(-1.0,.34,1.0,0.34,1.0,.35,-1.0,.35,102, 99, 97);

}
void trainlinenight()
{
    quad(-1.0,.34,1.0,0.34,1.0,.35,-1.0,.35,114, 106, 117);
}
void grass()
{
    quad(-1.0,0.05,1.0,0.05,1.0,-0.05,-1.0,-0.05,51, 135, 49);
    //quad(-0.1,-1.0,-0.1,1.0,0.0,-1.0,0.0,44, 199, 80);
}
void grassnight()
{
    quad(-1.0,0.05,1.0,0.05,1.0,-0.05,-1.0,-0.05,115, 143, 81);
    //quad(-0.1,-1.0,-0.1,1.0,0.0,-1.0,0.0,44, 199, 80);
}
void wall()
{
   quad(-1.0,0.35,1.0,0.35,1.0,0.41,-1.0,0.41,214, 144, 211);
   line(-1.0,0.38,-1.0,0.41,255, 250, 245);
   line(-0.8,0.38,-0.8,0.41,255, 250, 245);
   line(-0.6,0.38,-0.6,0.41,255, 250, 245);
   line(-0.4,0.38,-0.4,0.41,255, 250, 245);
   line(-0.2,0.38,-0.2,0.41,255, 250, 245);
   line(0.0,0.38,0.0,0.41,255, 250, 245);
   line(0.2,0.38,0.2,0.41,255, 250, 245);
   line(0.4,0.38,0.4,0.41,255, 250, 245);
   line(0.6,0.38,0.6,0.41,255, 250, 245);
   line(0.8,0.38,0.8,0.41,255, 250, 245);
}
void wallnight()
{
   quad(-1.0,0.31,1.0,0.31,1.0,0.41,-1.0,0.41,97, 18, 94);
   line(-1.0,0.38,-1.0,0.41,255, 250, 245);
   line(-0.8,0.38,-0.8,0.41,255, 250, 245);
   line(-0.6,0.38,-0.6,0.41,255, 250, 245);
   line(-0.4,0.38,-0.4,0.41,255, 250, 245);
   line(-0.2,0.38,-0.2,0.41,255, 250, 245);
   line(0.0,0.38,0.0,0.41,255, 250, 245);
   line(0.2,0.38,0.2,0.41,255, 250, 245);
   line(0.4,0.38,0.4,0.41,255, 250, 245);
   line(0.6,0.38,0.6,0.41,255, 250, 245);
   line(0.8,0.38,0.8,0.41,255, 250, 245);
}
void bus()
{  //bus 1
    quad(0.6,0.13,0.73,0.13,0.73,0.15,0.6,0.15,61, 72, 219);
    quad(0.6,0.15,0.73,0.15,0.73,0.18,0.6,0.18,194, 124, 19);
    quad(0.6,0.15,0.63,0.15,0.63,0.17,0.6,0.17,176, 173, 169);
    quad(0.62,0.12,0.63,0.12,0.63,0.15,0.62,0.15,176, 173, 169);
    quad(0.64,0.15,0.66,0.15,0.66,0.17,0.64,0.17,176, 173, 169);
    quad(0.67,0.15,0.69,0.15,0.69,0.17,0.67,0.17,176, 173, 169);
    quad(0.7,0.15,0.72,0.15,0.72,0.17,0.7,0.17,176, 173, 169);
    circle(0.625,0.13,0.01,122, 102, 69);
    circle(0.7,0.13,0.01,122, 102, 69);
}

void busnight()
{  //bus 1

   quad(0.6,0.13,0.73,0.13,0.73,0.15,0.6,0.15,61, 72, 219);
    quad(0.6,0.15,0.73,0.15,0.73,0.18,0.6,0.18,194, 124, 19);
    quad(0.6,0.15,0.63,0.15,0.63,0.17,0.6,0.17,176, 173, 169);
    quad(0.62,0.12,0.63,0.12,0.63,0.15,0.62,0.15,176, 173, 169);
    quad(0.64,0.15,0.66,0.15,0.66,0.17,0.64,0.17,176, 173, 169);
    quad(0.67,0.15,0.69,0.15,0.69,0.17,0.67,0.17,176, 173, 169);
    quad(0.7,0.15,0.72,0.15,0.72,0.17,0.7,0.17,176, 173, 169);
    circle(0.625,0.13,0.01,122, 102, 69);
    circle(0.7,0.13,0.01,122, 102, 69);
    glColor3ub(222, 166, 62);
    triangle1(0.6,0.14,0.57,0.17,0.57,0.10);
}
void bus1()
  {
   //bus2
     quad(-0.6,0.23,-0.73,0.23,-0.73,0.25,-0.6,0.25,61, 72, 219);
    quad(-0.6,0.25,-0.73,0.25,-0.73,0.28,-0.6,0.28,194, 124, 19);
    quad(-0.6,0.25,-0.63,0.25,-0.63,0.27,-0.6,0.27,176, 173, 169);
    quad(-0.62,0.22,-0.63,0.22,-0.63,0.25,-0.62,0.25,176, 173, 169);
    quad(-0.64,0.25,-0.66,0.25,-0.66,0.27,-0.64,0.27,176, 173, 169);
    quad(-0.67,0.25,-0.69,0.25,-0.69,0.27,-0.67,0.27,176, 173, 169);
    quad(-0.7,0.25,-0.72,0.25,-0.72,0.27,-0.7,0.27,176, 173, 169);
    circle(-0.625,0.23,0.01,122, 102, 69);
    circle(-0.7,0.23,0.01,122, 102, 69);
}
void bus1night()
  {
   //bus2
    quad(-0.6,0.23,-0.73,0.23,-0.73,0.25,-0.6,0.25,61, 72, 219);
    quad(-0.6,0.25,-0.73,0.25,-0.73,0.28,-0.6,0.28,194, 124, 19);
    quad(-0.6,0.25,-0.63,0.25,-0.63,0.27,-0.6,0.27,176, 173, 169);
    quad(-0.62,0.22,-0.63,0.22,-0.63,0.25,-0.62,0.25,176, 173, 169);
    quad(-0.64,0.25,-0.66,0.25,-0.66,0.27,-0.64,0.27,176, 173, 169);
    quad(-0.67,0.25,-0.69,0.25,-0.69,0.27,-0.67,0.27,176, 173, 169);
    quad(-0.7,0.25,-0.72,0.25,-0.72,0.27,-0.7,0.27,176, 173, 169);
    circle(-0.625,0.23,0.01,122, 102, 69);
    circle(-0.7,0.23,0.01,122, 102, 69);
     glColor3ub(222, 166, 62);
    triangle1(-0.6,0.24,-0.57,0.27,-0.57,0.20);
}
GLfloat buspos = 0.0f;
GLfloat busS = 0.012f;
GLfloat bus1pos = 0.0f;
GLfloat bus1S = 0.012f;
void busMove(int value) {
  if(buspos <-2.5)
        buspos = 1.2f;

   if(bus1pos >2.5)
        bus1pos = -1.2f;
  buspos -= busS;
  bus1pos += bus1S;
  glutPostRedisplay();
  glutTimerFunc(100, busMove, 0);
}
void busMovenight(int value) {
  if(buspos <-2.5)
        buspos = 1.2f;

   if(bus1pos >2.5)
        bus1pos = -1.2f;
  buspos -= busS;
  bus1pos += bus1S;
  glutPostRedisplay();
  glutTimerFunc(100, busMovenight, 0);
}
void renderBitmapString(float x, float y, float z, void *font, char *string) {
    char *c;
    glRasterPos3f(x, y,z);
    for (c=string; *c != '\0'; c++)
    {
        glutBitmapCharacter(font, *c);
    }
}
void house()
{
//1st bari
quad(-1.0,0.41,-.93,0.41,-0.93,0.53,-1.0,0.53,184, 123, 114);
quad(-0.93,0.41,-0.92,0.41,-0.92,0.52,-0.93,0.53,184, 123, 114);
//window
quad(-0.94,0.47,-0.96,0.47,-0.96,0.51,-0.94,0.51,255, 250, 245);
quad(-0.97,0.47,-0.99,0.47,-0.99,0.51,-0.97,0.51,255, 250, 245);
quad(-0.94,0.42,-0.96,0.42,-0.96,0.45,-0.94,0.45,255, 250, 245);
quad(-0.97,0.42,-0.99,0.42,-0.99,0.45,-0.97,0.45,255, 250, 245);
//1st bari name
glColor3ub(176, 194, 169);
quad1(-0.93,0.53,-0.98,0.53,-0.98,0.57,-0.93,0.57);
glColor3ub(54, 71, 112);
renderBitmapString(-0.98f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Rojoni");
renderBitmapString(-0.98f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//2nd bari
quad(-.9,0.41,-.83,0.41,-0.83,0.6,-0.9,0.6,124, 135, 30);
quad(-0.83,0.41,-0.82,0.41,-0.82,0.59,-0.83,0.6,139, 153, 20);
  //window
quad(-0.84,0.47,-0.86,0.47,-0.86,0.51,-0.84,0.51,255, 250, 245);
quad(-0.87,0.47,-0.89,0.47,-0.89,0.51,-0.87,0.51,255, 250, 245);
quad(-0.84,0.55,-0.86,0.55,-0.86,0.58,-0.84,0.58,255, 250, 245);
quad(-0.87,0.55,-0.89,0.55,-0.89,0.58,-0.87,0.58,255, 250, 245);
quad(-0.84,0.42,-0.86,0.42,-0.86,0.45,-0.84,0.45,255, 250, 245);
quad(-0.87,0.42,-0.89,0.42,-0.89,0.45,-0.87,0.45,255, 250, 245);
//2nd name
glColor3ub(176, 194, 169);
quad1(-0.83,0.6,-0.9,0.6,-0.9,0.65,-0.83,0.65);
glColor3ub(54, 71, 112);
renderBitmapString(-0.89, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Ghasfull");
renderBitmapString(-0.89f, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//3rd bari
quad(-.8,0.41,-.73,0.41,-0.73,0.62,-0.8,0.62,96, 89, 181);
quad(-0.73,0.41,-0.72,0.41,-0.72,0.61,-0.73,0.62,81, 73, 179);
  //window
quad(-0.74,0.47,-0.76,0.47,-0.76,0.51,-0.74,0.51,255, 250, 245);
quad(-0.77,0.47,-0.79,0.47,-0.79,0.51,-0.77,0.51,255, 250, 245);
quad(-0.74,0.55,-0.76,0.55,-0.76,0.58,-0.74,0.58,255, 250, 245);
quad(-0.77,0.55,-0.79,0.55,-0.79,0.58,-0.77,0.58,255, 250, 245);
quad(-0.74,0.42,-0.76,0.42,-0.76,0.45,-0.74,0.45,255, 250, 245);
quad(-0.77,0.42,-0.79,0.42,-0.79,0.45,-0.77,0.45,255, 250, 245);
//3rdnd name
glColor3ub(176, 194, 169);
quad1(-0.735,0.62,-0.79,0.62,-0.79,0.67,-0.735,0.67);
glColor3ub(54, 71, 112);
renderBitmapString(-0.79f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Bonolota");
renderBitmapString(-0.79f, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//4th bari
quad(-.7,0.41,-.63,0.41,-0.63,0.57,-0.7,0.57,145, 134, 45);
quad(-0.63,0.41,-0.62,0.41,-0.62,0.56,-0.63,0.57,173, 157, 24);
  //window
quad(-0.64,0.47,-0.66,0.47,-0.66,0.5,-0.64,0.5,255, 250, 245);
quad(-0.67,0.47,-0.69,0.47,-0.69,0.5,-0.67,0.5,255, 250, 245);
quad(-0.64,0.52,-0.66,0.52,-0.66,0.55,-0.64,0.55,255, 250, 245);
quad(-0.67,0.52,-0.69,0.52,-0.69,0.55,-0.67,0.55,255, 250, 245);
quad(-0.64,0.42,-0.66,0.42,-0.66,0.45,-0.64,0.45,255, 250, 245);
quad(-0.67,0.42,-0.69,0.42,-0.69,0.45,-0.67,0.45,255, 250, 245);
//4th name
glColor3ub(186, 191, 184);
quad1(-0.63,0.57,-0.7,0.57,-0.7,0.61,-0.63,0.61);
glColor3ub(125, 39, 27);
renderBitmapString(-0.69, 0.59f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Rupali");
renderBitmapString(-0.69f, 0.57f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Hotel");
//5th bari
quad(-.6,0.41,-.53,0.41,-0.53,0.65,-0.6,0.65,112, 111, 99);
quad(-0.53,0.41,-0.52,0.41,-0.52,0.64,-0.53,0.65,122, 121, 98);
  //window
quad(-0.54,0.47,-0.56,0.47,-0.56,0.5,-0.54,0.5,255, 250, 245);
quad(-0.57,0.47,-0.59,0.47,-0.59,0.5,-0.57,0.5,255, 250, 245);
quad(-0.54,0.53,-0.56,0.53,-0.56,0.57,-0.54,0.57,255, 250, 245);
quad(-0.57,0.53,-0.59,0.53,-0.59,0.57,-0.57,0.57,255, 250, 245);
quad(-0.54,0.6,-0.56,0.6,-0.56,0.63,-0.54,0.63,255, 250, 245);
quad(-0.57,0.6,-0.59,0.6,-0.59,0.63,-0.57,0.63,255, 250, 245);
quad(-0.54,0.42,-0.56,0.42,-0.56,0.45,-0.54,0.45,255, 250, 245);
quad(-0.57,0.42,-0.59,0.42,-0.59,0.45,-0.57,0.45,255, 250, 245);
//5th name
glColor3ub(186, 191, 184);
quad1(-0.59,0.65,-0.53,0.65,-0.53,0.69,-0.59,0.69);
glColor3ub(125, 39, 27);
renderBitmapString(-0.59f, 0.67f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Bargaining");
renderBitmapString(-0.59f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"shop");
//6th bari
quad(-.5,0.41,-.43,0.41,-0.43,0.6,-0.5,0.6,87, 117, 101);
quad(-0.43,0.41,-0.42,0.41,-0.42,0.59,-0.43,0.6,69, 117, 92);
  //window
quad(-0.44,0.47,-0.46,0.47,-0.46,0.51,-0.44,0.51,255, 250, 245);
quad(-0.47,0.47,-0.49,0.47,-0.49,0.51,-0.47,0.51,255, 250, 245);
quad(-0.44,0.55,-0.46,0.55,-0.46,0.58,-0.44,0.58,255, 250, 245);
quad(-0.47,0.55,-0.49,0.55,-0.49,0.58,-0.47,0.58,255, 250, 245);
quad(-0.44,0.42,-0.46,0.42,-0.46,0.45,-0.44,0.45,255, 250, 245);
quad(-0.47,0.42,-0.49,0.42,-0.49,0.45,-0.47,0.45,255, 250, 245);
//6th name
glColor3ub(186, 191, 184);
quad1(-0.49,0.6,-0.435,0.6,-0.435,0.65,-0.49,0.65);
glColor3ub(125, 39, 27);
renderBitmapString(-0.49f, 0.64f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"projapoti");
renderBitmapString(-0.49f, 0.6f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//7th bari
quad(-.4,0.41,-.33,0.41,-0.33,0.62,-0.4,0.62,191, 125, 90);
quad(-0.33,0.41,-0.32,0.41,-0.32,0.61,-0.33,0.62,199, 114, 70);
  //window
quad(-0.34,0.47,-0.36,0.47,-0.36,0.51,-0.34,0.51,255, 250, 245);
quad(-0.37,0.47,-0.39,0.47,-0.39,0.51,-0.37,0.51,255, 250, 245);
quad(-0.34,0.55,-0.36,0.55,-0.36,0.58,-0.34,0.58,255, 250, 245);
quad(-0.37,0.55,-0.39,0.55,-0.39,0.58,-0.37,0.58,255, 250, 245);
quad(-0.34,0.42,-0.36,0.42,-0.36,0.45,-0.34,0.45,255, 250, 245);
quad(-0.37,0.42,-0.39,0.42,-0.39,0.45,-0.37,0.45,255, 250, 245);
//7th name
glColor3ub(186, 191, 184);
quad1(-0.39,0.62,-0.34,0.62,-0.34,0.67,-0.39,0.67);
glColor3ub(125, 39, 27);
renderBitmapString(-0.39f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Sumaia");
renderBitmapString(-0.39f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//8th bari
quad(-0.3,0.41,-.23,0.41,-0.23,0.53,-0.3,0.53,60, 120, 119);
quad(-0.23,0.41,-0.22,0.41,-0.22,0.52,-0.23,0.53,52, 130, 129);
//window
quad(-0.24,0.47,-0.26,0.47,-0.26,0.51,-0.24,0.51,255, 250, 245);
quad(-0.27,0.47,-0.29,0.47,-0.29,0.51,-0.27,0.51,255, 250, 245);
quad(-0.24,0.42,-0.26,0.42,-0.26,0.45,-0.24,0.45,255, 250, 245);
quad(-0.27,0.42,-0.29,0.42,-0.29,0.45,-0.27,0.45,255, 250, 245);
//8th name
glColor3ub(186, 191, 184);
quad1(-0.29,0.53,-0.24,0.53,-0.24,0.56,-0.29,0.56);
glColor3ub(125, 39, 27);
renderBitmapString(-0.29f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Nirob");
renderBitmapString(-0.29f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//9rd bari
quad(-.2,0.41,-.13,0.41,-0.13,0.62,-0.2,0.62,166, 99, 158);
quad(-0.13,0.41,-0.12,0.41,-0.12,0.61,-0.13,0.62,171, 75, 159);
  //window
quad(-0.14,0.47,-0.16,0.47,-0.16,0.51,-0.14,0.51,255, 250, 245);
quad(-0.17,0.47,-0.19,0.47,-0.19,0.51,-0.17,0.51,255, 250, 245);
quad(-0.14,0.55,-0.16,0.55,-0.16,0.58,-0.14,0.58,255, 250, 245);
quad(-0.17,0.55,-0.19,0.55,-0.19,0.58,-0.17,0.58,255, 250, 245);
quad(-0.14,0.42,-0.16,0.42,-0.16,0.45,-0.14,0.45,255, 250, 245);
quad(-0.17,0.42,-0.19,0.42,-0.19,0.45,-0.17,0.45,255, 250, 245);
//9th name
glColor3ub(186, 191, 184);
quad1(-0.19,0.62,-0.14,0.62,-0.14,0.67,-0.19,0.67);
glColor3ub(125, 39, 27);
renderBitmapString(-0.19f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Shopno");
renderBitmapString(-0.19f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Nir");
//10 bari
quad(-.1,0.41,-.03,0.41,-0.03,0.62,-0.1,0.62,59, 37, 56);
//quad(-0.03,0.45,-0.02,0.45,-0.02,0.61,-0.03,0.62,171, 75, 159);
  //window
quad(-0.04,0.47,-0.06,0.47,-0.06,0.51,-0.04,0.51,255, 250, 245);
quad(-0.07,0.47,-0.09,0.47,-0.09,0.51,-0.07,0.51,255, 250, 245);
quad(-0.04,0.55,-0.06,0.55,-0.06,0.58,-0.04,0.58,255, 250, 245);
quad(-0.07,0.55,-0.09,0.55,-0.09,0.58,-0.07,0.58,255, 250, 245);
quad(-0.04,0.42,-0.06,0.42,-0.06,0.45,-0.04,0.45,255, 250, 245);
quad(-0.07,0.42,-0.09,0.42,-0.09,0.45,-0.07,0.45,255, 250, 245);
//10 NAME
glColor3ub(186, 191, 184);
quad1(-0.09,0.67,-0.04,0.67,-0.04,0.62,-0.09,0.62);
glColor3ub(125, 39, 27);
renderBitmapString(-0.09f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"ONJOLI");
renderBitmapString(-0.09f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"shop");
//11th bari
quad(.1,0.41,.03,0.41,0.03,0.65,0.1,0.65,50, 61, 138);
quad(0.03,0.41,0.02,0.41,0.02,0.64,0.03,0.65,24, 42, 163);
  //window
quad(0.04,0.47,0.06,0.47,0.06,0.5,0.04,0.5,255, 250, 245);
quad(0.07,0.47,0.09,0.47,0.09,0.5,0.07,0.5,255, 250, 245);
quad(0.04,0.53,0.06,0.53,0.06,0.57,0.04,0.57,255, 250, 245);
quad(0.07,0.53,0.09,0.53,0.09,0.57,0.07,0.57,255, 250, 245);
quad(0.04,0.6,.06,0.6,0.06,0.63,0.04,0.63,255, 250, 245);
quad(0.07,0.6,0.09,0.6,0.09,0.63,0.07,0.63,255, 250, 245);
quad(0.04,0.42,.06,0.42,0.06,0.45,0.04,0.45,255, 250, 245);
quad(0.07,0.42,0.09,0.42,0.09,0.45,0.07,0.45,255, 250, 245);
//11 NAME
glColor3ub(186, 191, 184);
quad1(0.09,0.69,0.04,0.69,0.04,0.65,0.09,0.65);
glColor3ub(125, 39, 27);
renderBitmapString(0.04f, 0.67f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"akas");
renderBitmapString(0.04f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");

//12th bari
quad(.2,0.41,.13,0.41,0.13,0.63,0.2,0.63,69, 204, 193);
quad(0.13,0.41,0.12,0.41,0.12,0.62,0.13,0.63,65, 163, 155);
  //window
quad(0.14,0.47,0.16,0.47,0.16,0.5,0.14,0.5,255, 250, 245);
quad(0.17,0.47,0.19,0.47,0.19,0.5,0.17,0.5,255, 250, 245);
quad(0.14,0.53,0.16,0.53,0.16,0.57,0.14,0.57,255, 250, 245);
quad(0.17,0.53,0.19,0.53,0.19,0.57,0.17,0.57,255, 250, 245);
quad(0.14,0.6,.16,0.6,0.16,0.62,0.14,0.62,255, 250, 245);
quad(0.17,0.6,0.19,0.6,0.19,0.62,0.17,0.62,255, 250, 245);
quad(0.14,0.42,.16,0.42,0.16,0.45,0.14,0.45,255, 250, 245);
quad(0.17,0.42,0.19,0.42,0.19,0.45,0.17,0.45,255, 250, 245);
//12 name
glColor3ub(186, 191, 184);
quad1(0.19,0.63,0.14,0.63,0.14,0.67,0.19,0.67);
glColor3ub(125, 39, 27);
renderBitmapString(0.14f, 0.66, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Godhoraj");
renderBitmapString(0.14f, 0.63, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//13th bari
quad(.3,0.41,.23,0.41,0.23,0.57,0.3,0.57,138, 179, 34);
quad(0.23,0.41,0.22,0.41,0.22,0.56,0.23,0.57,106, 133, 40);
  //window
quad(0.24,0.47,0.26,0.47,0.26,0.5,0.24,0.5,255, 250, 245);
quad(0.27,0.47,0.29,0.47,0.29,0.5,0.27,0.5,255, 250, 245);
quad(0.24,0.52,0.26,0.52,0.26,0.55,0.24,0.55,255, 250, 245);
quad(0.27,0.52,0.29,0.52,0.29,0.55,0.27,0.55,255, 250, 245);
quad(0.24,0.42,0.26,0.42,0.26,0.45,0.24,0.45,255, 250, 245);
quad(0.27,0.42,0.29,0.42,0.29,0.45,0.27,0.45,255, 250, 245);
//13 name
glColor3ub(186, 191, 184);
quad1(0.29,0.57,0.24,0.57,0.24,0.62,0.29,0.62);
glColor3ub(125, 39, 27);
renderBitmapString(0.24, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mahfuja");
renderBitmapString(0.24, 0.57f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");

//14th bari
quad(.4,0.41,.33,0.41,0.33,0.65,0.4,0.65,166, 98, 111);
quad(0.33,0.41,0.32,0.41,0.32,0.64,0.33,0.65,135, 93, 101);
  //window
quad(0.34,0.47,0.36,0.47,0.36,0.5,0.34,0.5,255, 250, 245);
quad(0.37,0.47,0.39,0.47,0.39,0.5,0.37,0.5,255, 250, 245);
quad(0.34,0.53,0.36,0.53,0.36,0.57,0.34,0.57,255, 250, 245);
quad(0.37,0.53,0.39,0.53,0.39,0.57,0.37,0.57,255, 250, 245);
quad(0.34,0.6,.36,0.6,0.36,0.63,0.34,0.63,255, 250, 245);
quad(0.37,0.6,0.39,0.6,0.39,0.63,0.37,0.63,255, 250, 245);
quad(0.34,0.42,.36,0.42,0.36,0.45,0.34,0.45,255, 250, 245);
quad(0.37,0.42,0.39,0.42,0.39,0.45,0.37,0.45,255, 250, 245);
//14 name
glColor3ub(186, 191, 184);
quad1(0.39,0.65,0.34,0.65,0.34,0.69,0.39,0.69);
glColor3ub(125, 39, 27);
renderBitmapString(0.34, 0.68f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Sumaia");
renderBitmapString(0.34, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//15 bari
quad(.5,0.41,.43,0.41,0.43,0.6,0.5,0.6,124, 135, 30);
quad(0.43,0.41,0.42,0.41,0.42,0.59,0.43,0.6,139, 153, 20);
  //window
quad(0.44,0.47,0.46,0.47,0.46,0.51,0.44,0.51,255, 250, 245);
quad(0.47,0.47,0.49,0.47,0.49,0.51,0.47,0.51,255, 250, 245);
quad(0.44,0.55,0.46,0.55,0.46,0.58,0.44,0.58,255, 250, 245);
quad(0.47,0.55,0.49,0.55,0.49,0.58,0.47,0.58,255, 250, 245);
quad(0.44,0.42,0.46,0.42,0.46,0.45,0.44,0.45,255, 250, 245);
quad(0.47,0.42,0.49,0.42,0.49,0.45,0.47,0.45,255, 250, 245);
//15 name
glColor3ub(186, 191, 184);
quad1(0.49,0.6,0.435,0.6,0.435,0.65,0.49,0.65);
glColor3ub(125, 39, 27);
renderBitmapString(0.435f, 0.64f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"rup");
renderBitmapString(0.435f, 0.6f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//16 bari
quad(0.6,0.41,.53,0.41,0.53,0.53,0.6,0.53,184, 123, 114);
quad(0.53,0.41,0.52,0.41,0.52,0.52,0.53,0.53,184, 123, 114);
//window
quad(0.54,0.47,0.56,0.47,0.56,0.51,0.54,0.51,255, 250, 245);
quad(0.57,0.47,0.59,0.47,0.59,0.51,0.57,0.51,255, 250, 245);
quad(0.54,0.42,0.56,0.42,0.56,0.45,0.54,0.45,255, 250, 245);
quad(0.57,0.42,0.59,0.42,0.59,0.45,0.57,0.45,255, 250, 245);
//16 name
glColor3ub(186, 191, 184);
quad1(0.59,0.53,0.53,0.53,0.53,0.57,0.59,0.57);
glColor3ub(125, 39, 27);
renderBitmapString(0.53, 0.56, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mirtha");
renderBitmapString(0.53, 0.53, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//17 bari
quad(.7,0.41,.63,0.41,0.63,0.63,0.7,0.63,168, 88, 139);
quad(0.63,0.41,0.62,0.41,0.62,0.62,0.63,0.63,112, 59, 93);
  //window
quad(0.64,0.47,0.66,0.47,0.66,0.5,0.64,0.5,255, 250, 245);
quad(0.67,0.47,0.69,0.47,0.69,0.5,0.67,0.5,255, 250, 245);
quad(0.64,0.53,0.66,0.53,0.66,0.57,0.64,0.57,255, 250, 245);
quad(0.67,0.53,0.69,0.53,0.69,0.57,0.67,0.57,255, 250, 245);
quad(0.64,0.6,.66,0.6,0.66,0.62,0.64,0.62,255, 250, 245);
quad(0.67,0.6,0.69,0.6,0.69,0.62,0.67,0.62,255, 250, 245);
quad(0.64,0.42,.66,0.42,0.66,0.45,0.64,0.45,255, 250, 245);
quad(0.67,0.42,0.69,0.42,0.69,0.45,0.67,0.45,255, 250, 245);
//17 name
glColor3ub(186, 191, 184);
quad1(0.63,0.67,0.7,0.67,0.7,0.63,0.63,0.63);
glColor3ub(125, 39, 27);
renderBitmapString(0.63, 0.66f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Noyontara");
renderBitmapString(0.63, 0.63, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Hotel");
//18 bari
quad(.8,0.41,.72,0.41,0.72,0.65,0.8,0.65,168, 88, 139);
quad(0.72,0.41,0.71,0.41,0.71,0.64,0.72,0.65,112, 59, 93);
  //window
quad(0.74,0.47,0.76,0.47,0.76,0.5,0.74,0.5,255, 250, 245);
quad(0.77,0.47,0.79,0.47,0.79,0.5,0.77,0.5,255, 250, 245);
quad(0.74,0.53,0.76,0.53,0.76,0.57,0.74,0.57,255, 250, 245);
quad(0.77,0.53,0.79,0.53,0.79,0.57,0.77,0.57,255, 250, 245);
quad(0.74,0.6,.76,0.6,0.76,0.62,0.74,0.62,255, 250, 245);
quad(0.77,0.6,0.79,0.6,0.79,0.62,0.77,0.62,255, 250, 245);
quad(0.74,0.42,.76,0.42,0.76,0.45,0.74,0.45,255, 250, 245);
quad(0.77,0.42,0.79,0.42,0.79,0.45,0.77,0.45,255, 250, 245);
//18 NAME
glColor3ub(176, 194, 169);
quad1(0.73,0.65,0.79,0.65,0.79,0.69,0.73,0.69);
glColor3ub(54, 71, 112);
renderBitmapString(0.73f, 0.68f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Abir");
renderBitmapString(0.73f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//19 bari
quad(.9,0.41,.83,0.41,0.83,0.6,0.9,0.6,9, 61, 87);
quad(0.83,0.41,0.82,0.41,0.82,0.59,0.83,0.6,9, 84, 122);
  //window
quad(0.84,0.47,0.86,0.47,0.86,0.51,0.84,0.51,255, 250, 245);
quad(0.87,0.47,0.89,0.47,0.89,0.51,0.87,0.51,255, 250, 245);
quad(0.84,0.55,0.86,0.55,0.86,0.58,0.84,0.58,255, 250, 245);
quad(0.87,0.55,0.89,0.55,0.89,0.58,0.87,0.58,255, 250, 245);
quad(0.84,0.42,0.86,0.42,0.86,0.45,0.84,0.45,255, 250, 245);
quad(0.87,0.42,0.89,0.42,0.89,0.45,0.87,0.45,255, 250, 245);
//19 name
glColor3ub(176, 194, 169);
quad1(0.84,0.6,0.9,0.6,0.9,0.65,.84,0.65);
glColor3ub(54, 71, 112);
renderBitmapString(0.84, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Niasa");
renderBitmapString(0.84f, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//21 bari
quad(1.0,0.41,.93,0.41,0.93,0.53,1.0,0.53,156, 53, 16);
quad(0.93,0.41,0.92,0.41,0.92,0.52,0.93,0.53,130, 49, 20);
//window
quad(0.94,0.47,0.96,0.47,0.96,0.51,0.94,0.51,255, 250, 245);
quad(0.97,0.47,0.99,0.47,0.99,0.51,0.97,0.51,255, 250, 245);
quad(0.94,0.42,0.96,0.42,0.96,0.45,0.94,0.45,255, 250, 245);
quad(0.97,0.42,0.99,0.42,0.99,0.45,0.97,0.45,255, 250, 245);
//20 name
glColor3ub(176, 194, 169);
quad1(0.94,0.53,0.98,0.53,0.98,0.57,0.94,0.57);
glColor3ub(54, 71, 112);
renderBitmapString(0.94f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Gajoni");
renderBitmapString(0.94f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
}

void housenight()
{
//1st bari
glColor3ub(154,123,114);
quad1(-1.0,0.41,-.93,0.41,-0.93,0.53,-1.0,0.53);
quad1(-0.93,0.41,-0.92,0.41,-0.92,0.52,-0.93,0.53);
//window
glColor3ub(245, 228, 166);
quad1(-0.94,0.47,-0.96,0.47,-0.96,0.51,-0.94,0.51);
quad1(-0.97,0.47,-0.99,0.47,-0.99,0.51,-0.97,0.51);
quad1(-0.94,0.42,-0.96,0.42,-0.96,0.45,-0.94,0.45);
quad1(-0.97,0.42,-0.99,0.42,-0.99,0.45,-0.97,0.45);
//glColor3ub(176, 194, 169);
//quad1(-0.93,0.53,-0.98,0.53,-0.98,0.57,-0.93,0.57);
glColor3ub(224, 67, 36);
renderBitmapString(-0.98f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Rojoni");
renderBitmapString(-0.98f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");


//2nd bari
quad(-.9,0.41,-.83,0.41,-0.83,0.6,-0.9,0.6,124, 135, 30);
quad(-0.83,0.41,-0.82,0.41,-0.82,0.59,-0.83,0.6,139, 153, 20);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.84,0.47,-0.86,0.47,-0.86,0.51,-0.84,0.51);
quad1(-0.87,0.47,-0.89,0.47,-0.89,0.51,-0.87,0.51);
quad1(-0.84,0.55,-0.86,0.55,-0.86,0.58,-0.84,0.58);
quad1(-0.87,0.55,-0.89,0.55,-0.89,0.58,-0.87,0.58);
quad1(-0.84,0.42,-0.86,0.42,-0.86,0.45,-0.84,0.45);
quad1(-0.87,0.42,-0.89,0.42,-0.89,0.45,-0.87,0.45);
//2nd name
//glColor3ub(176, 194, 169);
//quad1(-0.83,0.6,-0.9,0.6,-0.9,0.65,-0.83,0.65);
glColor3ub(75, 207, 35);
renderBitmapString(-0.89, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Ghasfull");
renderBitmapString(-0.89f, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//3rd bari
//3rd bari
quad(-.8,0.41,-.73,0.41,-0.73,0.62,-0.8,0.62,96, 89, 181);
quad(-0.73,0.41,-0.72,0.41,-0.72,0.61,-0.73,0.62,81, 73, 179);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.74,0.47,-0.76,0.47,-0.76,0.51,-0.74,0.51);
quad1(-0.77,0.47,-0.79,0.47,-0.79,0.51,-0.77,0.51);
quad1(-0.74,0.55,-0.76,0.55,-0.76,0.58,-0.74,0.58);
quad1(-0.77,0.55,-0.79,0.55,-0.79,0.58,-0.77,0.58);
quad1(-0.74,0.42,-0.76,0.42,-0.76,0.45,-0.74,0.45);
quad1(-0.77,0.42,-0.79,0.42,-0.79,0.45,-0.77,0.45);
//3rdnd name
//glColor3ub(176, 194, 169);
//quad1(-0.735,0.62,-0.79,0.62,-0.79,0.67,-0.735,0.67);
glColor3ub(63, 209, 207);
renderBitmapString(-0.79f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Bonolota");
renderBitmapString(-0.79f, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//4th bari
quad(-.7,0.41,-.63,0.41,-0.63,0.57,-0.7,0.57,145, 134, 45);
quad(-0.63,0.41,-0.62,0.41,-0.62,0.56,-0.63,0.57,173, 157, 24);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.64,0.47,-0.66,0.47,-0.66,0.5,-0.64,0.5);
quad1(-0.67,0.47,-0.69,0.47,-0.69,0.5,-0.67,0.5);
quad1(-0.64,0.52,-0.66,0.52,-0.66,0.55,-0.64,0.55);
quad1(-0.67,0.52,-0.69,0.52,-0.69,0.55,-0.67,0.55);
quad1(-0.64,0.42,-0.66,0.42,-0.66,0.45,-0.64,0.45);
quad1(-0.67,0.42,-0.69,0.42,-0.69,0.45,-0.67,0.45);
//4th name
//glColor3ub(186, 191, 184);
//quad1(-0.63,0.57,-0.7,0.57,-0.7,0.61,-0.63,0.61);
glColor3ub(40, 69, 235);
renderBitmapString(-0.69, 0.59f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Rupali");
renderBitmapString(-0.69f, 0.57f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Hotel");
//5th bari
quad(-.6,0.41,-.53,0.41,-0.53,0.65,-0.6,0.65,112, 111, 99);
quad(-0.53,0.41,-0.52,0.41,-0.52,0.64,-0.53,0.65,122, 121, 98);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.54,0.47,-0.56,0.47,-0.56,0.5,-0.54,0.5);
quad1(-0.57,0.47,-0.59,0.47,-0.59,0.5,-0.57,0.5);
quad1(-0.54,0.53,-0.56,0.53,-0.56,0.57,-0.54,0.57);
quad1(-0.57,0.53,-0.59,0.53,-0.59,0.57,-0.57,0.57);
quad1(-0.54,0.6,-0.56,0.6,-0.56,0.63,-0.54,0.63);
quad1(-0.57,0.6,-0.59,0.6,-0.59,0.63,-0.57,0.63);
quad1(-0.54,0.42,-0.56,0.42,-0.56,0.45,-0.54,0.45);
quad1(-0.57,0.42,-0.59,0.42,-0.59,0.45,-0.57,0.45);
//5th name
//glColor3ub(186, 191, 184);
//quad1(-0.59,0.65,-0.53,0.65,-0.53,0.69,-0.59,0.69);
glColor3ub(191, 50, 189);
renderBitmapString(-0.59f, 0.67f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Bargaining");
renderBitmapString(-0.59f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"shop");
//6th bari
quad(-.5,0.41,-.43,0.41,-0.43,0.6,-0.5,0.6,87, 117, 101);
quad(-0.43,0.41,-0.42,0.41,-0.42,0.59,-0.43,0.6,69, 117, 92);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.44,0.47,-0.46,0.47,-0.46,0.51,-0.44,0.51);
quad1(-0.47,0.47,-0.49,0.47,-0.49,0.51,-0.47,0.51);
quad1(-0.44,0.55,-0.46,0.55,-0.46,0.58,-0.44,0.58);
quad1(-0.47,0.55,-0.49,0.55,-0.49,0.58,-0.47,0.58);
quad1(-0.44,0.42,-0.46,0.42,-0.46,0.45,-0.44,0.45);
quad1(-0.47,0.42,-0.49,0.42,-0.49,0.45,-0.47,0.45);
//6th name
//glColor3ub(186, 191, 184);
//quad1(-0.49,0.6,-0.435,0.6,-0.435,0.65,-0.49,0.65);
glColor3ub(125, 39, 27);
renderBitmapString(-0.49f, 0.64f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"projapoti");
renderBitmapString(-0.49f, 0.6f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//7th bari
quad(-.4,0.41,-.33,0.41,-0.33,0.62,-0.4,0.62,191, 125, 90);
quad(-0.33,0.41,-0.32,0.41,-0.32,0.61,-0.33,0.62,199, 114, 70);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.34,0.47,-0.36,0.47,-0.36,0.51,-0.34,0.51);
quad1(-0.37,0.47,-0.39,0.47,-0.39,0.51,-0.37,0.51);
quad1(-0.34,0.55,-0.36,0.55,-0.36,0.58,-0.34,0.58);
quad1(-0.37,0.55,-0.39,0.55,-0.39,0.58,-0.37,0.58);
quad1(-0.34,0.42,-0.36,0.42,-0.36,0.45,-0.34,0.45);
quad1(-0.37,0.42,-0.39,0.42,-0.39,0.45,-0.37,0.45);
//7th name
//glColor3ub(186, 191, 184);
//quad1(-0.39,0.62,-0.34,0.62,-0.34,0.67,-0.39,0.67);
glColor3ub(181, 16, 57);
renderBitmapString(-0.39f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Sumaia");
renderBitmapString(-0.39f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//8th bari
quad(-0.3,0.41,-.23,0.41,-0.23,0.53,-0.3,0.53,60, 120, 119);
quad(-0.23,0.41,-0.22,0.41,-0.22,0.52,-0.23,0.53,52, 130, 129);
//window
glColor3ub(245, 228, 166);
quad1(-0.24,0.47,-0.26,0.47,-0.26,0.51,-0.24,0.51);
quad1(-0.27,0.47,-0.29,0.47,-0.29,0.51,-0.27,0.51);
quad1(-0.24,0.42,-0.26,0.42,-0.26,0.45,-0.24,0.45);
quad1(-0.27,0.42,-0.29,0.42,-0.29,0.45,-0.27,0.45);
//8th name
//glColor3ub(186, 191, 184);
//quad1(-0.29,0.53,-0.24,0.53,-0.24,0.56,-0.29,0.56);
glColor3ub(198, 212, 49);
renderBitmapString(-0.29f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Nirob");
renderBitmapString(-0.29f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//9rd bari
quad(-.2,0.41,-.13,0.41,-0.13,0.62,-0.2,0.62,166, 99, 158);
quad(-0.13,0.41,-0.12,0.41,-0.12,0.61,-0.13,0.62,171, 75, 159);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.14,0.47,-0.16,0.47,-0.16,0.51,-0.14,0.51);
quad1(-0.17,0.47,-0.19,0.47,-0.19,0.51,-0.17,0.51);
quad1(-0.14,0.55,-0.16,0.55,-0.16,0.58,-0.14,0.58);
quad1(-0.17,0.55,-0.19,0.55,-0.19,0.58,-0.17,0.58);
quad1(-0.14,0.42,-0.16,0.42,-0.16,0.45,-0.14,0.45);
quad1(-0.17,0.42,-0.19,0.42,-0.19,0.45,-0.17,0.45);
//9th name
//glColor3ub(186, 191, 184);
//uad1(-0.19,0.62,-0.14,0.62,-0.14,0.67,-0.19,0.67);
glColor3ub(227, 57, 190);
renderBitmapString(-0.19f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Shopno");
renderBitmapString(-0.19f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Nir");
//10 bari
quad(-.1,0.41,-.03,0.41,-0.03,0.62,-0.1,0.62,59, 37, 56);
//quad(-0.03,0.45,-0.02,0.45,-0.02,0.61,-0.03,0.62,171, 75, 159);
  //window
  glColor3ub(245, 228, 166);
quad1(-0.04,0.47,-0.06,0.47,-0.06,0.51,-0.04,0.51);
quad1(-0.07,0.47,-0.09,0.47,-0.09,0.51,-0.07,0.51);
quad1(-0.04,0.55,-0.06,0.55,-0.06,0.58,-0.04,0.58);
quad1(-0.07,0.55,-0.09,0.55,-0.09,0.58,-0.07,0.58);
quad1(-0.04,0.42,-0.06,0.42,-0.06,0.45,-0.04,0.45);
quad1(-0.07,0.42,-0.09,0.42,-0.09,0.45,-0.07,0.45);
//10 NAME
//glColor3ub(186, 191, 184);
//quad1(-0.09,0.67,-0.04,0.67,-0.04,0.62,-0.09,0.62);
glColor3ub(35, 32, 230);
renderBitmapString(-0.09f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"ONJOLI");
renderBitmapString(-0.09f, 0.62f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"shop");
//11th bari
quad(.1,0.41,.03,0.41,0.03,0.65,0.1,0.65,50, 61, 138);
quad(0.03,0.41,0.02,0.41,0.02,0.64,0.03,0.65,24, 42, 163);
  //window
  glColor3ub(245, 228, 166);
quad1(0.04,0.47,0.06,0.47,0.06,0.5,0.04,0.5);
quad1(0.07,0.47,0.09,0.47,0.09,0.5,0.07,0.5);
quad1(0.04,0.53,0.06,0.53,0.06,0.57,0.04,0.57);
quad1(0.07,0.53,0.09,0.53,0.09,0.57,0.07,0.57);
quad1(0.04,0.6,.06,0.6,0.06,0.63,0.04,0.63);
quad1(0.07,0.6,0.09,0.6,0.09,0.63,0.07,0.63);
quad1(0.04,0.42,.06,0.42,0.06,0.45,0.04,0.45);
quad1(0.07,0.42,0.09,0.42,0.09,0.45,0.07,0.45);
//11 NAME
//glColor3ub(186, 191, 184);
//quad1(0.09,0.69,0.04,0.69,0.04,0.65,0.09,0.65);
glColor3ub(201, 44, 30);
renderBitmapString(0.04f, 0.67f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"akas");
renderBitmapString(0.04f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");

//12th bari
quad(.2,0.41,.13,0.41,0.13,0.63,0.2,0.63,69, 204, 193);
quad(0.13,0.41,0.12,0.41,0.12,0.62,0.13,0.63,65, 163, 155);
  //window
  glColor3ub(245, 228, 166);
quad1(0.14,0.47,0.16,0.47,0.16,0.5,0.14,0.5);
quad1(0.17,0.47,0.19,0.47,0.19,0.5,0.17,0.5);
quad1(0.14,0.53,0.16,0.53,0.16,0.57,0.14,0.57);
quad1(0.17,0.53,0.19,0.53,0.19,0.57,0.17,0.57);
quad1(0.14,0.6,.16,0.6,0.16,0.62,0.14,0.62);
quad1(0.17,0.6,0.19,0.6,0.19,0.62,0.17,0.62);
quad1(0.14,0.42,.16,0.42,0.16,0.45,0.14,0.45);
quad1(0.17,0.42,0.19,0.42,0.19,0.45,0.17,0.45);
//12 name
//glColor3ub(186, 191, 184);
//quad1(0.19,0.63,0.14,0.63,0.14,0.67,0.19,0.67);
glColor3ub(237, 122, 7);
renderBitmapString(0.14f, 0.66, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Godhoraj");
renderBitmapString(0.14f, 0.63, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//13th bari
quad(.3,0.41,.23,0.41,0.23,0.57,0.3,0.57,138, 179, 34);
quad(0.23,0.41,0.22,0.41,0.22,0.56,0.23,0.57,106, 133, 40);
  //window
  glColor3ub(245, 228, 166);
quad1(0.24,0.47,0.26,0.47,0.26,0.5,0.24,0.5);
quad1(0.27,0.47,0.29,0.47,0.29,0.5,0.27,0.5);
quad1(0.24,0.52,0.26,0.52,0.26,0.55,0.24,0.55);
quad1(0.27,0.52,0.29,0.52,0.29,0.55,0.27,0.55);
quad1(0.24,0.42,0.26,0.42,0.26,0.45,0.24,0.45);
quad1(0.27,0.42,0.29,0.42,0.29,0.45,0.27,0.45);
//13 name
//glColor3ub(186, 191, 184);
//quad1(0.29,0.57,0.24,0.57,0.24,0.62,0.29,0.62);
glColor3ub(125, 39, 27);
renderBitmapString(0.24, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mahfuja");
renderBitmapString(0.24, 0.57f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");

//14th bari
quad(.4,0.41,.33,0.41,0.33,0.65,0.4,0.65,166, 98, 111);
quad(0.33,0.41,0.32,0.41,0.32,0.64,0.33,0.65,135, 93, 101);
  //window
  glColor3ub(245, 228, 166);
quad1(0.34,0.47,0.36,0.47,0.36,0.5,0.34,0.5);
quad1(0.37,0.47,0.39,0.47,0.39,0.5,0.37,0.5);
quad1(0.34,0.53,0.36,0.53,0.36,0.57,0.34,0.57);
quad1(0.37,0.53,0.39,0.53,0.39,0.57,0.37,0.57);
quad1(0.34,0.6,.36,0.6,0.36,0.63,0.34,0.63);
quad1(0.37,0.6,0.39,0.6,0.39,0.63,0.37,0.63);
quad1(0.34,0.42,.36,0.42,0.36,0.45,0.34,0.45);
quad1(0.37,0.42,0.39,0.42,0.39,0.45,0.37,0.45);
//14 name
//glColor3ub(186, 191, 184);
//quad1(0.39,0.65,0.34,0.65,0.34,0.69,0.39,0.69);
glColor3ub(78, 217, 222);
renderBitmapString(0.34, 0.68f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Sumaia");
renderBitmapString(0.34, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//15 bari
quad(.5,0.41,.43,0.41,0.43,0.6,0.5,0.6,124, 135, 30);
quad(0.43,0.41,0.42,0.41,0.42,0.59,0.43,0.6,139, 153, 20);
  //window
  glColor3ub(245, 228, 166);
quad1(0.44,0.47,0.46,0.47,0.46,0.51,0.44,0.51);
quad1(0.47,0.47,0.49,0.47,0.49,0.51,0.47,0.51);
quad1(0.44,0.55,0.46,0.55,0.46,0.58,0.44,0.58);
quad1(0.47,0.55,0.49,0.55,0.49,0.58,0.47,0.58);
quad1(0.44,0.42,0.46,0.42,0.46,0.45,0.44,0.45);
quad1(0.47,0.42,0.49,0.42,0.49,0.45,0.47,0.45);
//15 name
//glColor3ub(186, 191, 184);
//quad1(0.49,0.6,0.435,0.6,0.435,0.65,0.49,0.65);
glColor3ub(184, 62, 91);
renderBitmapString(0.435f, 0.64f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"rup");
renderBitmapString(0.435f, 0.6f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//16 bari
quad(0.6,0.41,.53,0.41,0.53,0.53,0.6,0.53,184, 123, 114);
quad(0.53,0.41,0.52,0.41,0.52,0.52,0.53,0.53,184, 123, 114);
//window
glColor3ub(245, 228, 166);
quad1(0.54,0.47,0.56,0.47,0.56,0.51,0.54,0.51);
quad1(0.57,0.47,0.59,0.47,0.59,0.51,0.57,0.51);
quad1(0.54,0.42,0.56,0.42,0.56,0.45,0.54,0.45);
quad1(0.57,0.42,0.59,0.42,0.59,0.45,0.57,0.45);
//16 name
//glColor3ub(186, 191, 184);
//quad1(0.59,0.53,0.53,0.53,0.53,0.57,0.59,0.57);
glColor3ub(204, 27, 204);
renderBitmapString(0.53, 0.56, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mirtha");
renderBitmapString(0.53, 0.53, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//17 bari
quad(.7,0.41,.63,0.41,0.63,0.63,0.7,0.63,168, 88, 139);
quad(0.63,0.41,0.62,0.41,0.62,0.62,0.63,0.63,112, 59, 93);
  //window
  glColor3ub(245, 228, 166);
quad1(0.64,0.47,0.66,0.47,0.66,0.5,0.64,0.5);
quad1(0.67,0.47,0.69,0.47,0.69,0.5,0.67,0.5);
quad1(0.64,0.53,0.66,0.53,0.66,0.57,0.64,0.57);
quad1(0.67,0.53,0.69,0.53,0.69,0.57,0.67,0.57);
quad1(0.64,0.6,.66,0.6,0.66,0.62,0.64,0.62);
quad1(0.67,0.6,0.69,0.6,0.69,0.62,0.67,0.62);
quad1(0.64,0.42,.66,0.42,0.66,0.45,0.64,0.45);
quad1(0.67,0.42,0.69,0.42,0.69,0.45,0.67,0.45);
//17 name
//glColor3ub(186, 191, 184);
//quad1(0.63,0.67,0.7,0.67,0.7,0.63,0.63,0.63);
glColor3ub(97, 73, 184);
renderBitmapString(0.63, 0.66f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Noyontara");
renderBitmapString(0.63, 0.63, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Hotel");
//18 bari
quad(.8,0.41,.72,0.41,0.72,0.65,0.8,0.65,168, 88, 139);
quad(0.72,0.41,0.71,0.41,0.71,0.64,0.72,0.65,112, 59, 93);
  //window
  glColor3ub(245, 228, 166);
quad1(0.74,0.47,0.76,0.47,0.76,0.5,0.74,0.5);
quad1(0.77,0.47,0.79,0.47,0.79,0.5,0.77,0.5);
quad1(0.74,0.53,0.76,0.53,0.76,0.57,0.74,0.57);
quad1(0.77,0.53,0.79,0.53,0.79,0.57,0.77,0.57);
quad1(0.74,0.6,.76,0.6,0.76,0.62,0.74,0.62);
quad1(0.77,0.6,0.79,0.6,0.79,0.62,0.77,0.62);
quad1(0.74,0.42,.76,0.42,0.76,0.45,0.74,0.45);
quad1(0.77,0.42,0.79,0.42,0.79,0.45,0.77,0.45);
//18 NAME
//glColor3ub(176, 194, 169);
//quad1(0.73,0.65,0.79,0.65,0.79,0.69,0.73,0.69);
glColor3ub(29, 125, 194);
renderBitmapString(0.73f, 0.68f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Abir");
renderBitmapString(0.73f, 0.65f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Mohol");
//19 bari
quad(.9,0.41,.83,0.41,0.83,0.6,0.9,0.6,9, 61, 87);
quad(0.83,0.41,0.82,0.41,0.82,0.59,0.83,0.6,9, 84, 122);
  //window
  glColor3ub(245, 228, 166);
quad1(0.84,0.47,0.86,0.47,0.86,0.51,0.84,0.51);
quad1(0.87,0.47,0.89,0.47,0.89,0.51,0.87,0.51);
quad1(0.84,0.55,0.86,0.55,0.86,0.58,0.84,0.58);
quad1(0.87,0.55,0.89,0.55,0.89,0.58,0.87,0.58);
quad1(0.84,0.42,0.86,0.42,0.86,0.45,0.84,0.45);
quad1(0.87,0.42,0.89,0.42,0.89,0.45,0.87,0.45);
//glColor3ub(176, 194, 169);
//quad1(0.84,0.6,0.9,0.6,0.9,0.65,.84,0.65);
glColor3ub(90, 237, 57);
renderBitmapString(0.84, 0.63f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Niasa");
renderBitmapString(0.84f, 0.61f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
//21 bari
quad(1.0,0.41,.93,0.41,0.93,0.53,1.0,0.53,156, 53, 16);
quad(0.93,0.41,0.92,0.41,0.92,0.52,0.93,0.53,130, 49, 20);
//window
glColor3ub(245, 228, 166);
quad1(0.94,0.47,0.96,0.47,0.96,0.51,0.94,0.51);
quad1(0.97,0.47,0.99,0.47,0.99,0.51,0.97,0.51);
quad1(0.94,0.42,0.96,0.42,0.96,0.45,0.94,0.45);
quad1(0.97,0.42,0.99,0.42,0.99,0.45,0.97,0.45);
//glColor3ub(176, 194, 169);
//quad1(0.94,0.53,0.98,0.53,0.98,0.57,0.94,0.57);
glColor3ub(194, 67, 21);
renderBitmapString(0.94f, 0.55f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"Gajoni");
renderBitmapString(0.94f, 0.53f, 0.0f,GLUT_BITMAP_TIMES_ROMAN_10,"House");
}

void train()
{
    quad(0.52,0.35,0.62,0.35,0.62,0.38,0.54,0.38,70, 240, 240);
    quad(0.54,0.38,0.57,0.38,0.57,0.42,0.54,0.42,242, 190, 116);
    quad(0.55,0.42,0.56,0.42,0.56,0.44,0.55,0.44,84, 140, 168);
    quad(0.57,0.38,0.62,0.38,0.62,0.45,0.57,0.45,199, 116, 8);
    quad(0.58,0.4,0.61,0.4,0.61,0.44,0.58,0.44,255, 250, 245);
    quad(0.565,0.45,0.625,0.45,0.625,0.46,0.565,0.46,59, 52, 44);
    quad(0.64,0.35,0.71,0.35,0.71,0.43,0.64,0.43,60, 107, 65);
    /*...join train line...*/
    quad(0.62,0.36,0.64,0.36,0.64,0.37,0.62,0.37,230, 18, 89);
    /*....2nd bogi...*/
    quad(0.635,0.43,0.715,0.43,0.715,0.44,0.635,0.44,59, 52, 44);
    quad(0.65,0.39,0.67,0.39,0.67,0.42,0.65,0.42,255, 250, 245);
    quad(0.68,0.39,0.7,0.39,0.7,0.42,0.68,0.42,255, 250, 245);
    /*...join2nd bogi..*/
    quad(0.71,0.36,0.73,0.36,0.73,0.37,0.71,0.37,230, 18, 89);

    quad(0.73,0.35,0.81,0.35,0.81,0.43,0.73,0.43,60, 107, 65);
    quad(0.74,0.39,0.76,0.39,0.76,0.42,0.74,0.42,255, 250, 245);
    quad(0.77,0.39,0.79,0.39,0.79,0.42,0.77,0.42,255, 250, 245);
    quad(0.725,0.43,0.815,0.43,0.815,0.44,0.725,0.44,59, 52, 44);
    /*...3rd bogi..*/
    quad(0.83,0.35,0.91,0.35,0.91,0.43,0.83,0.43,60, 107, 65);
    quad(0.84,0.39,0.86,0.39,0.86,0.42,0.84,0.42,255, 250, 245);
    quad(0.87,0.39,0.89,0.39,0.89,0.42,0.87,0.42,255, 250, 245);
    quad(0.825,0.43,0.915,0.43,0.915,0.44,0.825,0.44,59, 52, 44);
    /*....3rd bogi join..*/
    quad(0.81,0.36,0.83,0.36,0.83,0.37,0.81,0.37,230, 18, 89);
    /*..4th bogi.*/
    quad(0.93,0.35,1.0,0.35,1.0,0.43,0.93,0.43,60, 107, 65);
    quad(0.94,0.39,0.96,0.39,0.96,0.42,0.94,0.42,255, 250, 245);
    quad(0.97,0.39,0.99,0.39,0.99,0.42,0.97,0.42,255, 250, 245);
    quad(0.925,0.43,1.0,0.43,1.0,0.44,0.925,0.44,59, 52, 44);
    quad(0.91,0.36,0.93,0.36,0.93,0.37,0.91,0.37,230, 18, 89);

    circle(0.55,0.35,0.015,59, 52, 44);
    circle(0.59,0.35,0.015,59, 52, 44);
    circle(0.66,0.35,0.015,59, 52, 44);
    circle(0.69,0.35,0.015,59, 52, 44);
    circle(0.75,0.35,0.015,59, 52, 44);
    circle(0.78,0.35,0.015,59, 52, 44);
    circle(0.85,0.35,0.015,59, 52, 44);
    circle(0.88,0.35,0.015,59, 52, 44);
    circle(0.95,0.35,0.015,59, 52, 44);
    circle(0.98,0.35,0.015,59, 52, 44);
    /*..LIGHT*/
    quad(.53,0.4,0.54,0.4,0.54,0.41,0.53,0.41,227, 196, 93);
    triangle(0.52,0.42,0.54,0.41,0.54,0.42,59, 52, 44);

}
GLfloat trainpos = 0.0f;
GLfloat speed = 0.01f;
void trainMove(int value) {
  if(trainpos <-2.5)
        trainpos = 1.2f;

  trainpos -= speed;
  glutPostRedisplay();
  glutTimerFunc(100, trainMove, 0);
}
void trainnight()
{
   quad(0.52,0.35,0.62,0.35,0.62,0.38,0.54,0.38,70, 240, 240);
    quad(0.54,0.38,0.57,0.38,0.57,0.42,0.54,0.42,242, 190, 116);
    quad(0.55,0.42,0.56,0.42,0.56,0.44,0.55,0.44,84, 140, 168);
    quad(0.57,0.38,0.62,0.38,0.62,0.45,0.57,0.45,199, 116, 8);
    quad(0.58,0.4,0.61,0.4,0.61,0.44,0.58,0.44,255, 250, 245);
    quad(0.565,0.45,0.625,0.45,0.625,0.46,0.565,0.46,59, 52, 44);
    quad(0.64,0.35,0.71,0.35,0.71,0.43,0.64,0.43,60, 107, 65);
    /*...join train line...*/
    quad(0.62,0.36,0.64,0.36,0.64,0.37,0.62,0.37,230, 18, 89);
    /*....2nd bogi...*/
    quad(0.635,0.43,0.715,0.43,0.715,0.44,0.635,0.44,59, 52, 44);
    quad(0.65,0.39,0.67,0.39,0.67,0.42,0.65,0.42,255, 250, 245);
    quad(0.68,0.39,0.7,0.39,0.7,0.42,0.68,0.42,255, 250, 245);
    /*...join2nd bogi..*/
    quad(0.71,0.36,0.73,0.36,0.73,0.37,0.71,0.37,230, 18, 89);

    quad(0.73,0.35,0.81,0.35,0.81,0.43,0.73,0.43,60, 107, 65);
    quad(0.74,0.39,0.76,0.39,0.76,0.42,0.74,0.42,255, 250, 245);
    quad(0.77,0.39,0.79,0.39,0.79,0.42,0.77,0.42,255, 250, 245);
    quad(0.725,0.43,0.815,0.43,0.815,0.44,0.725,0.44,59, 52, 44);
    /*...3rd bogi..*/
    quad(0.83,0.35,0.91,0.35,0.91,0.43,0.83,0.43,60, 107, 65);
    quad(0.84,0.39,0.86,0.39,0.86,0.42,0.84,0.42,255, 250, 245);
    quad(0.87,0.39,0.89,0.39,0.89,0.42,0.87,0.42,255, 250, 245);
    quad(0.825,0.43,0.915,0.43,0.915,0.44,0.825,0.44,59, 52, 44);
    /*....3rd bogi join..*/
    quad(0.81,0.36,0.83,0.36,0.83,0.37,0.81,0.37,230, 18, 89);
    /*..4th bogi.*/
    quad(0.93,0.35,1.0,0.35,1.0,0.43,0.93,0.43,60, 107, 65);
    quad(0.94,0.39,0.96,0.39,0.96,0.42,0.94,0.42,255, 250, 245);
    quad(0.97,0.39,0.99,0.39,0.99,0.42,0.97,0.42,255, 250, 245);
    quad(0.925,0.43,1.0,0.43,1.0,0.44,0.925,0.44,59, 52, 44);
    quad(0.91,0.36,0.93,0.36,0.93,0.37,0.91,0.37,230, 18, 89);

    circle(0.55,0.35,0.015,59, 52, 44);
    circle(0.59,0.35,0.015,59, 52, 44);
    circle(0.66,0.35,0.015,59, 52, 44);
    circle(0.69,0.35,0.015,59, 52, 44);
    circle(0.75,0.35,0.015,59, 52, 44);
    circle(0.78,0.35,0.015,59, 52, 44);
    circle(0.85,0.35,0.015,59, 52, 44);
    circle(0.88,0.35,0.015,59, 52, 44);
    circle(0.95,0.35,0.015,59, 52, 44);
    circle(0.98,0.35,0.015,59, 52, 44);
    /*..LIGHT*/
    quad(.53,0.4,0.54,0.4,0.54,0.41,0.53,0.41,224, 190, 54);
    triangle(0.52,0.42,0.54,0.41,0.54,0.42,59, 52, 44);
    triangle(0.53,0.4,0.47,0.39,0.47,0.36,224, 190, 54);


}
void trainMovenight(int value) {
  if(trainpos <-2.5)
        trainpos = 1.2f;

  trainpos -= speed;
  glutPostRedisplay();
  glutTimerFunc(100, trainMovenight, 0);
}
void car1()
{
//glColor3ub(199, 76, 44);
quad(0.7,0.12,0.8,0.12,0.8,0.14,0.7,0.14,199, 76, 44);
quad(0.72,0.14,0.74,0.17,0.78,0.17,0.79,0.14,199, 76, 44);
quad(0.73,0.14,0.75,0.14,0.75,0.15,0.74,0.15,15, 15, 15);
quad(0.76,0.14,0.78,0.14,0.77,0.15,0.76,0.15,15, 15, 15);
circle(0.73,0.12,0.01,89, 74, 74);
circle(0.77,0.12,0.01,89,74,74);

}
void car1night()
{
 glColor3ub(110, 41, 47);
quad1(0.7,0.12,0.8,0.12,0.8,0.14,0.7,0.14);
quad1(0.72,0.14,0.74,0.17,0.78,0.17,0.79,0.14);
glColor3ub(15,15,15);
quad1(0.73,0.14,0.75,0.14,0.75,0.15,0.74,0.15);
quad1(0.76,0.14,0.78,0.14,0.77,0.15,0.76,0.15);
glColor3ub(89,74,74);
circle1(0.73,0.12,0.01);
circle1(0.77,0.12,0.01);
glColor3ub(224, 191, 25);
triangle1(0.7,0.13,0.67,0.16,0.67,0.10);

}
GLfloat car1pos = 0.0f;
//GLfloat speed = 0.01f;
void car1Move(int value) {
  if(car1pos <-2.5)
        car1pos = 1.2f;

  car1pos -= speed;
  glutPostRedisplay();
  glutTimerFunc(100, car1Move, 0);
}
void car1Movenight(int value) {
  if(car1pos <-2.5)
        car1pos = 1.2f;

  car1pos -= speed;
  glutPostRedisplay();
  glutTimerFunc(100, car1Movenight, 0);
}
void car2()
{
   quad(0.8,0.15,0.9,0.15,0.9,0.17,0.8,0.17,232, 26, 163);
   quad(0.82,0.17,0.89,0.17,0.88,0.20,0.83,0.20,232, 26, 163);
   quad(0.83,0.18,0.85,0.18,0.85,0.19,0.84,0.19,15, 15, 15);
   quad(0.86,0.18,0.88,0.18,0.87,0.19,0.86,0.19,15, 15, 15);
   circle(0.83,0.15,0.01,89, 74, 74);
   circle(0.87,0.15,0.01,89,74,74);

}
void car2night()
{  glColor3ub(89, 40, 79);
   quad1(0.8,0.15,0.9,0.15,0.9,0.17,0.8,0.17);
   quad1(0.82,0.17,0.89,0.17,0.88,0.20,0.83,0.20);
   glColor3ub(15,15,15);
   quad1(0.83,0.18,0.85,0.18,0.85,0.19,0.84,0.19);
   quad1(0.86,0.18,0.88,0.18,0.87,0.19,0.86,0.19);
   glColor3ub(89,74,74);
   circle1(0.83,0.15,0.01);
   circle1(0.87,0.15,0.01);
   glColor3ub(224, 191, 25);
   triangle1(0.8,0.16,.77,.19,.77,.13);

}
GLfloat car2pos = 0.0f;
GLfloat speed2 = 0.008f;
void car2Move(int value) {
  if(car2pos <-2.5)
        car2pos = 1.2f;

  car2pos -= speed2;
  glutPostRedisplay();
  glutTimerFunc(100, car2Move, 0);
}
void car2Movenight(int value) {
  if(car2pos <-2.5)
        car2pos = 1.2f;

  car2pos -= speed2;
  glutPostRedisplay();
  glutTimerFunc(100, car2Movenight, 0);
}
void car3()
{
    quad(-0.81,0.22,-0.89,0.22,-0.89,0.24,-0.81,0.24,20, 199, 77);
    quad(-0.83,0.24,-0.84,0.27,-0.87,0.27,-0.88,0.24,20, 199, 77);
    quad(-0.84,0.24,-0.85,0.26,-0.87,0.26,-0.87,0.24,15, 15, 15);
    circle(-0.83,0.22,0.01,89, 74, 74);
   circle(-0.87,0.22,0.01,89,74,74);
}
void car3night()
{  glColor3ub(60, 102, 69);
    quad1(-0.81,0.22,-0.89,0.22,-0.89,0.24,-0.81,0.24);
    quad1(-0.83,0.24,-0.84,0.27,-0.87,0.27,-0.88,0.24);
    glColor3ub(15,15,15);
    quad1(-0.84,0.24,-0.85,0.26,-0.87,0.26,-0.87,0.24);
    glColor3ub(89,74,74);
    circle1(-0.83,0.22,0.01);
   circle1(-0.87,0.22,0.01);
  glColor3ub(224, 191, 25);
  triangle1(-0.81,0.23,-0.78,0.25,-0.78,0.20);

}
GLfloat car3pos = 0.0f;
//GLfloat speed = 0.01f;
void car3Move(int value) {
  if(car3pos >2.5)
        car3pos = -1.2f;

  car3pos += speed;
  glutPostRedisplay();
  glutTimerFunc(100, car3Move, 0);
}
void car3Movenight(int value) {
  if(car3pos >2.5)
        car3pos = -1.2f;

  car3pos += speed;
  glutPostRedisplay();
  glutTimerFunc(100, car3Movenight, 0);
}
void car4()
{
    quad(-0.8,0.25,-0.7,0.25,-0.7,0.27,-0.8,0.27,199, 199, 20);
    quad(-0.72,0.27,-0.73,0.29,-0.78,0.29,-0.79,0.27,199, 199, 20);
    quad(-0.73,0.27,-0.74,0.28,-0.75,0.28,-0.75,0.27,15, 15, 15);
    quad(-0.76,0.27,-0.76,0.28,-0.77,0.28,-0.78,0.27,15, 15, 15);
    circle(-0.78,0.25,0.01,89, 74, 74);
   circle(-0.72,0.25,0.01,89,74,74);
}
void car4night()
{   glColor3ub(130, 117, 52);
    quad1(-0.8,0.25,-0.7,0.25,-0.7,0.27,-0.8,0.27);
    quad1(-0.72,0.27,-0.73,0.29,-0.78,0.29,-0.79,0.27);
    glColor3ub(15,15,15);
    quad1(-0.73,0.27,-0.74,0.28,-0.75,0.28,-0.75,0.27);
    quad1(-0.76,0.27,-0.76,0.28,-0.77,0.28,-0.78,0.27);
    glColor3ub(89,74,74);
    circle1(-0.78,0.25,0.01);
   circle1(-0.72,0.25,0.01);
   glColor3ub(224, 191, 25);
   triangle1(-0.7,0.26,-0.66,0.28,-0.66,0.24);
}
GLfloat car4pos = 0.0f;
GLfloat speed3 = 0.011f;
void car4Move(int value) {
  if(car4pos >2.5)
        car4pos = -1.2f;

  car4pos += speed3;
  glutPostRedisplay();
  glutTimerFunc(100, car4Move, 0);
}
void car4Movenight(int value) {
  if(car4pos >2.5)
        car4pos = -1.2f;

  car4pos += speed3;
  glutPostRedisplay();
  glutTimerFunc(100, car4Movenight, 0);
}

void backcolor()
{
    quad(-1.0,0.31,1.0,0.31,1.0,0.37,-1.0,0.37,214, 144, 211);
}
void backcolornight()
{
    quad(-1.0,0.31,1.0,0.31,1.0,0.37,-1.0,0.37,12,12,13);
}
void sky()
{
    quad(-1.0,.41,1.0,.41,1.0,1.0,-1.0,1.0,151, 190, 247);

}
void sky1()
{
    glColor3ub(158, 191, 217);
    quad1(-1.0,.41,1.0,.41,1.0,1.0,-1.0,1.0);
}
void skynight()
{  glColor3ub(111, 112, 135);
    quad1(-1.0,.41,1.0,.41,1.0,1.0,-1.0,1.0);

}
void star()
{
glColor3ub(250, 247, 247);
glBegin(GL_POLYGON);

    glVertex2f(-0.705, 0.82); //set the 5 vetices of polygon
    glVertex2f(-0.701, 0.81);
    glVertex2f(-0.704, 0.826);
    glVertex2f(-0.701, 0.838);
    glVertex2f(-0.705, 0.835);
    glVertex2f(-0.707, 0.851);
    glVertex2f(-0.707, 0.835);
    glVertex2f(-0.711, 0.83);
    glVertex2f(-0.707, 0.825);
    glVertex2f(-0.709, 0.81);

glEnd();

}
void star2()
{
    glBegin(GL_POLYGON);

    glVertex2f(-0.605, 0.72); //set the 5 vetices of polygon
    glVertex2f(-0.601, 0.71);
    glVertex2f(-0.604, 0.726);
    glVertex2f(-0.601, 0.738);
    glVertex2f(-0.605, 0.735);
    glVertex2f(-0.607, 0.751);
    glVertex2f(-0.607, 0.735);
    glVertex2f(-0.611, 0.73);
    glVertex2f(-0.607, 0.725);
    glVertex2f(-0.609, 0.71);


glEnd();
 glBegin(GL_POLYGON);
    glVertex2f(-0.505, 0.62); //set the 5 vetices of polygon
    glVertex2f(-0.501, 0.6);
    glVertex2f(-0.504, 0.626);
    glVertex2f(-0.501, 0.638);
    glVertex2f(-0.505, 0.635);
    glVertex2f(-0.507, 0.651);
    glVertex2f(-0.507, 0.635);
    glVertex2f(-0.511, 0.63);
    glVertex2f(-0.507, 0.625);
    glVertex2f(-0.509, 0.61);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.805, 0.92); //set the 5 vetices of polygon
    glVertex2f(-0.801, 0.91);
    glVertex2f(-0.804, 0.926);
    glVertex2f(-0.801, 0.938);
    glVertex2f(-0.805, 0.935);
    glVertex2f(-0.807, 0.951);
    glVertex2f(-0.807, 0.935);
    glVertex2f(-0.811, 0.93);
    glVertex2f(-0.807, 0.925);
    glVertex2f(-0.809, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.905, 0.72); //set the 5 vetices of polygon
    glVertex2f(-0.901, 0.71);
    glVertex2f(-0.904, 0.726);
    glVertex2f(-0.901, 0.738);
    glVertex2f(-0.905, 0.735);
    glVertex2f(-0.907, 0.751);
    glVertex2f(-0.907, 0.735);
    glVertex2f(-0.911, 0.73);
    glVertex2f(-0.907, 0.725);
    glVertex2f(-0.909, 0.71);

glEnd();

glBegin(GL_POLYGON);
    glVertex2f(-0.505, 0.92); //set the 5 vetices of polygon
    glVertex2f(-0.501, 0.91);
    glVertex2f(-0.504, 0.926);
    glVertex2f(-0.501, 0.938);
    glVertex2f(-0.505, 0.935);
    glVertex2f(-0.507, 0.951);
    glVertex2f(-0.507, 0.935);
    glVertex2f(-0.511, 0.93);
    glVertex2f(-0.507, 0.925);
    glVertex2f(-0.509, 0.91);

glEnd();

glBegin(GL_POLYGON);
    glVertex2f(-0.305, 0.82); //set the 5 vetices of polygon
    glVertex2f(-0.301, 0.81);
    glVertex2f(-0.304, 0.826);
    glVertex2f(-0.301, 0.838);
    glVertex2f(-0.305, 0.835);
    glVertex2f(-0.307, 0.851);
    glVertex2f(-0.307, 0.835);
    glVertex2f(-0.311, 0.83);
    glVertex2f(-0.307, 0.825);
    glVertex2f(-0.309, 0.81);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.105, 0.92); //set the 5 vetices of polygon
    glVertex2f(-0.101, 0.91);
    glVertex2f(-0.104, 0.926);
    glVertex2f(-0.101, 0.938);
    glVertex2f(-0.105, 0.935);
    glVertex2f(-0.107, 0.951);
    glVertex2f(-0.107, 0.935);
    glVertex2f(-0.111, 0.93);
    glVertex2f(-0.107, 0.925);
    glVertex2f(-0.109, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.105, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.101, 0.71);
    glVertex2f(0.104, 0.726);
    glVertex2f(0.101, 0.738);
    glVertex2f(0.105, 0.735);
    glVertex2f(0.107, 0.751);
    glVertex2f(0.107, 0.735);
    glVertex2f(0.111, 0.73);
    glVertex2f(0.107, 0.725);
    glVertex2f(0.109, 0.71);

glEnd();

glBegin(GL_POLYGON);
    glVertex2f(0.305, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.301, 0.71);
    glVertex2f(0.304, 0.726);
    glVertex2f(0.301, 0.738);
    glVertex2f(0.305, 0.735);
    glVertex2f(0.307, 0.71);
    glVertex2f(0.307, 0.735);
    glVertex2f(0.311, 0.73);
    glVertex2f(0.307, 0.725);
    glVertex2f(0.309, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.505, 0.92); //set the 5 vetices of polygon
    glVertex2f(0.501, 0.91);
    glVertex2f(0.504, 0.926);
    glVertex2f(0.501, 0.938);
    glVertex2f(0.505, 0.935);
    glVertex2f(0.507, 0.951);
    glVertex2f(0.507, 0.935);
    glVertex2f(0.511, 0.93);
    glVertex2f(0.507, 0.925);
    glVertex2f(0.509, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.505, 0.62); //set the 5 vetices of polygon
    glVertex2f(0.501, 0.61);
    glVertex2f(0.504, 0.626);
    glVertex2f(0.501, 0.638);
    glVertex2f(0.505, 0.635);
    glVertex2f(0.507, 0.61);
    glVertex2f(0.507, 0.635);
    glVertex2f(0.511, 0.63);
    glVertex2f(0.507, 0.625);
    glVertex2f(0.509, 0.61);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.105, 0.92); //set the 5 vetices of polygon
    glVertex2f(0.101, 0.91);
    glVertex2f(0.104, 0.926);
    glVertex2f(0.101, 0.938);
    glVertex2f(0.105, 0.935);
    glVertex2f(0.107, 0.951);
    glVertex2f(0.107, 0.935);
    glVertex2f(0.111, 0.93);
    glVertex2f(0.107, 0.925);
    glVertex2f(0.109, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.805, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.801, 0.71);
    glVertex2f(0.804, 0.726);
    glVertex2f(0.801, 0.738);
    glVertex2f(0.805, 0.735);
    glVertex2f(0.807, 0.751);
    glVertex2f(0.807, 0.735);
    glVertex2f(0.811, 0.73);
    glVertex2f(0.807, 0.725);
    glVertex2f(0.809, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.905, 0.92); //set the 5 vetices of polygon
    glVertex2f(0.901, 0.91);
    glVertex2f(0.904, 0.926);
    glVertex2f(0.901, 0.938);
    glVertex2f(0.905, 0.935);
    glVertex2f(0.907, 0.951);
    glVertex2f(0.907, 0.935);
    glVertex2f(0.911, 0.93);
    glVertex2f(0.907, 0.925);
    glVertex2f(0.909, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.9105, 0.62); //set the 5 vetices of polygon
    glVertex2f(0.9101, 0.61);
    glVertex2f(0.9104, 0.626);
    glVertex2f(0.9101, 0.638);
    glVertex2f(0.9105, 0.635);
    glVertex2f(0.9107, 0.651);
    glVertex2f(0.9107, 0.635);
    glVertex2f(0.9111, 0.63);
    glVertex2f(0.9107, 0.625);
    glVertex2f(0.9109, 0.61);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.6105, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.6101, 0.71);
    glVertex2f(0.6104, 0.726);
    glVertex2f(0.6101, 0.738);
    glVertex2f(0.6105, 0.735);
    glVertex2f(0.6107, 0.751);
    glVertex2f(0.6107, 0.735);
    glVertex2f(0.6111, 0.73);
    glVertex2f(0.6107, 0.725);
    glVertex2f(0.6109, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.705, 0.82); //set the 5 vetices of polygon
    glVertex2f(0.701, 0.81);
    glVertex2f(0.704, 0.826);
    glVertex2f(0.701, 0.838);
    glVertex2f(0.705, 0.835);
    glVertex2f(0.707, 0.851);
    glVertex2f(0.707, 0.835);
    glVertex2f(0.711, 0.83);
    glVertex2f(0.707, 0.825);
    glVertex2f(0.709, 0.81);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.3105, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.3101, 0.71);
    glVertex2f(0.3104, 0.726);
    glVertex2f(0.3101, 0.738);
    glVertex2f(0.3105, 0.735);
    glVertex2f(0.3107, 0.751);
    glVertex2f(0.3107, 0.735);
    glVertex2f(0.3111, 0.73);
    glVertex2f(0.3107, 0.725);
    glVertex2f(0.3109, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.405, 0.82); //set the 5 vetices of polygon
    glVertex2f(0.401, 0.81);
    glVertex2f(0.404, 0.826);
    glVertex2f(0.401, 0.838);
    glVertex2f(0.405, 0.85);
    glVertex2f(0.407, 0.851);
    glVertex2f(0.407, 0.835);
    glVertex2f(0.411, 0.83);
    glVertex2f(0.407, 0.825);
    glVertex2f(0.409, 0.81);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.1205, 0.92); //set the 5 vetices of polygon
    glVertex2f(0.1201, 0.91);
    glVertex2f(0.1204, 0.926);
    glVertex2f(0.1201, 0.938);
    glVertex2f(0.1205, 0.935);
    glVertex2f(0.1207, 0.951);
    glVertex2f(0.1207, 0.935);
    glVertex2f(0.1211, 0.93);
    glVertex2f(0.1207, 0.925);
    glVertex2f(0.1209, 0.91);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.205, 0.72); //set the 5 vetices of polygon
    glVertex2f(0.201, 0.71);
    glVertex2f(0.204, 0.726);
    glVertex2f(0.201, 0.738);
    glVertex2f(0.205, 0.735);
    glVertex2f(0.207, 0.751);
    glVertex2f(0.207, 0.735);
    glVertex2f(0.211, 0.73);
    glVertex2f(0.207, 0.725);
    glVertex2f(0.209, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(0.005, 0.82); //set the 5 vetices of polygon
    glVertex2f(0.001, 0.81);
    glVertex2f(0.004, 0.86);
    glVertex2f(0.001, 0.838);
    glVertex2f(0.005, 0.835);
    glVertex2f(0.007, 0.851);
    glVertex2f(0.007, 0.835);
    glVertex2f(0.011, 0.83);
    glVertex2f(0.007, 0.825);
    glVertex2f(0.009, 0.81);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.105, 0.82); //set the 5 vetices of polygon
    glVertex2f(-0.101, 0.81);
    glVertex2f(-0.104, 0.826);
    glVertex2f(-0.101, 0.838);
    glVertex2f(-0.105, 0.835);
    glVertex2f(-0.107, 0.851);
    glVertex2f(-0.107, 0.835);
    glVertex2f(-0.111, 0.83);
    glVertex2f(-0.107, 0.825);
    glVertex2f(-0.109, 0.81);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.205, 0.72); //set the 5 vetices of polygon
    glVertex2f(-0.201, 0.71);
    glVertex2f(-0.204, 0.726);
    glVertex2f(-0.201, 0.738);
    glVertex2f(-0.205, 0.735);
    glVertex2f(-0.207, 0.751);
    glVertex2f(-0.207, 0.735);
    glVertex2f(-0.211, 0.73);
    glVertex2f(-0.207, 0.725);
    glVertex2f(-0.209, 0.71);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.305, 0.62); //set the 5 vetices of polygon
    glVertex2f(-0.301, 0.61);
    glVertex2f(-0.304, 0.626);
    glVertex2f(-0.301, 0.638);
    glVertex2f(-0.305, 0.635);
    glVertex2f(-0.307, 0.651);
    glVertex2f(-0.307, 0.635);
    glVertex2f(-0.311, 0.63);
    glVertex2f(-0.307, 0.625);
    glVertex2f(-0.309, 0.61);

glEnd();
glBegin(GL_POLYGON);
    glVertex2f(-0.405, 0.82); //set the 5 vetices of polygon
    glVertex2f(-0.401, 0.81);
    glVertex2f(-0.404, 0.826);
    glVertex2f(-0.401, 0.838);
    glVertex2f(-0.405, 0.835);
    glVertex2f(-0.407, 0.851);
    glVertex2f(-0.407, 0.835);
    glVertex2f(-0.411, 0.83);
    glVertex2f(-0.407, 0.825);
    glVertex2f(-0.409, 0.81);

glEnd();
}

void moon()
{
    glColor3ub(240, 240, 240);
    circle1(-0.8,0.85,0.07);
}
void brize()
{
    //quad(0.52,-0.21,0.56,-0.21,0.56,-0.28,0.52,-0.28,94, 88, 85);

    quad(0.45,0.1,0.65,0.1,0.9,-1.0,0.7,-1.0,110, 112, 111);
    quad(0.42,0.1,0.45,0.1,0.7,-1.0,0.67,-1.0,247, 252, 252);
    //middle white
    glColor3ub(250, 247, 247);
    quad1(0.593,-0.15,0.6,-0.15,0.65,-0.35,0.643,-0.35);
    quad1(0.723,-0.7,0.73,-0.7,0.78,-0.9,0.773,-0.9);

}
void cleanbridge()
{
    glColor3ub(94, 90, 90);
    quad1(-0.85,-0.05,-0.87,-0.05,-0.87,-1.0,-0.85,-1.0);
    //1st piler
    glColor3ub(94, 78, 78);
    quad1(-0.85,-0.05,-0.83,-0.05,-0.83,-0.07,-0.85,-0.07);
    quad1(-0.85,-0.23,-0.83,-0.23,-0.83,-0.25,-0.85,-0.25);
   glColor3ub(96, 86, 110);
    quad1(-0.83,-0.07,-0.83,-0.23,-0.84,-0.23,-0.84,-0.07);
    glColor3ub(20, 20, 20);
    quad1(-0.84,-0.07,-0.84,-0.23,-0.85,-0.23,-0.85,-0.07);
    //2nd
     glColor3ub(94, 78, 78);
    quad1(-0.85,-0.43,-0.83,-0.43,-0.83,-0.46,-0.85,-0.46);
   glColor3ub(96, 86, 110);
    quad1(-0.83,-0.25,-0.84,-0.25,-0.84,-0.43,-0.83,-0.43);
    glColor3ub(20, 20, 20);
    quad1(-0.84,-0.25,-0.84,-0.43,-0.85,-0.43,-0.85,-0.25);
  //3'
   glColor3ub(94, 78, 78);
    quad1(-0.85,-0.7,-0.83,-0.7,-0.83,-0.73,-0.85,-0.73);
   glColor3ub(96, 86, 110);
    quad1(-0.83,-0.46,-0.84,-0.46,-0.84,-0.7,-0.83,-0.7);
    glColor3ub(20, 20, 20);
    quad1(-0.84,-0.46,-0.84,-0.7,-0.85,-0.7,-0.85,-0.46);
    //4
   glColor3ub(94, 78, 78);
    quad1(-0.85,-0.97,-0.83,-0.97,-0.83,-1.0,-0.85,-1.0);
   glColor3ub(96, 86, 110);
    quad1(-0.83,-0.73,-0.84,-0.73,-0.84,-0.97,-0.83,-0.97);
    glColor3ub(20, 20, 20);
    quad1(-0.84,-0.73,-0.84,-0.97,-0.85,-0.97,-0.85,-0.73);


     glColor3ub(250, 247, 247);
    line1(-0.848,-0.05,-0.848,-1.0);
    line1(-0.846,-0.05,-0.846,-1.0);
    line1(-0.85,-0.05,-0.846,-0.05);
    line1(-0.85,-0.2,-0.846,-0.2);
    line1(-0.85,-0.4,-0.846,-0.4);
    line1(-0.85,-0.6,-0.846,-0.6);
    line1(-0.85,-0.8,-0.846,-0.8);
    line1(-0.85,-1.0,-0.846,-1.0);
    //left right
    line1(-0.873,-0.05,-0.873,-1.0);
    line1(-.875,-0.05,-.875,-1.0);
    line1(-0.87,-0.05,-0.875,-0.05);
    line1(-0.87,-0.2,-0.875,-0.2);
    line1(-0.87,-0.4,-0.875,-0.4);
    line1(-0.87,-0.6,-0.875,-0.6);
    line1(-0.87,-0.8,-0.875,-0.8);
    line1(-0.87,-1.0,-0.875,-1.0);

}
void brizenight()
{
    //quad(0.52,-0.21,0.56,-0.21,0.56,-0.28,0.52,-0.28,94, 88, 85);
     glColor3ub(72,72,72);
    quad1(0.45,0.1,0.65,0.1,0.9,-1.0,0.7,-1.0);
    glColor3ub(250, 247, 247);
    quad1(0.593,-0.15,0.6,-0.15,0.65,-0.35,0.643,-0.35);
    quad1(0.723,-0.7,0.73,-0.7,0.78,-0.9,0.773,-0.9);

}
void brizelight()
{
    quad(0.42,0.1,0.45,0.1,0.47,0.02,0.438,0.02,79, 76, 76);
    quad(0.44,0.01,0.47,0.01,0.49,-0.07,0.458,-0.07,79, 76, 76);
    quad(0.46,-0.08,0.491,-0.08,0.51,-0.16,0.478,-0.16,79, 76, 76);
    quad(0.48,-0.17,0.513,-0.17,0.533,-0.26,0.499,-0.26,79, 76, 76);
    quad(0.504,-0.27,0.536,-0.27,0.555,-0.36,0.524,-0.36,79, 76, 76);
    quad(0.525,-0.37,0.557,-0.37,0.578,-0.46,0.544,-0.46,79, 76, 76);
    quad(0.546,-0.47,0.58,-0.47,0.6,-0.56,0.568,-0.56,79, 76, 76);
    quad(0.57,-0.57,0.602,-0.57,0.624,-0.66,0.59,-0.66,79, 76, 76);
    quad(0.595,-0.67,0.627,-0.67,0.648,-0.76,0.615,-0.76,79, 76, 76);
    quad(0.616,-0.77,0.648,-0.77,0.668,-0.86,0.638,-0.86,79, 76, 76);
    quad(0.64,-0.87,0.67,-0.87,0.692,-0.96,0.659,-0.96,79, 76, 76);
     quad(0.662,-0.97,0.692,-0.97,0.7,-1.0,0.67,-1.0,79, 76, 76);
}
void brizelight2()
{
   //quad(0.67,0.1,0.5,0.1,0.5,0.02,0.47,0.02,79, 76, 76);
    //quad(0.47,0.01,0.5,0.01,0.5,-0.07,0.47,-0.07,79, 76, 76);
    quad(0.37,-0.08,0.5,-0.08,0.5,-0.16,0.47,-0.16,79, 76, 76);
    quad(0.37,-0.18,0.5,-0.18,0.5,-0.26,0.47,-0.26,79, 76, 76);
    quad(0.37,-0.28,0.5,-0.28,0.5,-0.36,0.47,-0.36,79, 76, 76);
    quad(0.37,-0.38,0.5,-0.38,0.5,-0.46,0.47,-0.46,79, 76, 76);
    quad(0.37,-0.48,0.5,-0.48,0.5,-0.56,0.47,-0.56,79, 76, 76);
    quad(0.37,-0.58,0.5,-0.58,0.5,-0.66,0.47,-0.66,79, 76, 76);
    quad(0.37,-0.68,0.5,-0.68,0.5,-0.76,0.47,-0.76,79, 76, 76);
    quad(0.37,-0.78,0.5,-0.78,0.5,-0.86,0.47,-0.86,79, 76, 76);
    quad(0.37,-0.88,0.5,-0.88,0.5,-0.96,0.47,-0.96,79, 76, 76);
}
void brizelightnight()
{   glColor3ub(212, 167, 72);
    quad1(0.42,0.1,0.45,0.1,0.47,0.02,0.438,0.02);
    quad1(0.44,0.01,0.47,0.01,0.49,-0.07,0.458,-0.07);
    quad1(0.46,-0.08,0.491,-0.08,0.51,-0.16,0.478,-0.16);
    quad1(0.48,-0.17,0.513,-0.17,0.533,-0.26,0.499,-0.26);
    quad1(0.504,-0.27,0.536,-0.27,0.555,-0.36,0.524,-0.36);
    quad1(0.525,-0.37,0.557,-0.37,0.578,-0.46,0.544,-0.46);
    quad1(0.546,-0.47,0.58,-0.47,0.6,-0.56,0.568,-0.56);
    quad1(0.57,-0.57,0.602,-0.57,0.624,-0.66,0.59,-0.66);
    quad1(0.595,-0.67,0.627,-0.67,0.648,-0.76,0.615,-0.76);
    quad1(0.616,-0.77,0.648,-0.77,0.668,-0.86,0.638,-0.86);
    quad1(0.64,-0.87,0.67,-0.87,0.692,-0.96,0.659,-0.96);
     quad1(0.662,-0.97,0.692,-0.97,0.7,-1.0,0.67,-1.0);
}
void brizelightnight1()
{   glColor3ub(212, 167, 72);
   quad1(0.42,-0.08,0.451,-0.08,0.471,-0.16,0.438,-0.16);
    quad1(0.44,-0.17,0.473,-0.17,0.49,-0.26,0.459,-0.26);
    quad1(0.46,-0.27,0.496,-0.27,0.511,-0.36,0.478,-0.36);
    quad1(0.48,-0.37,0.515,-0.37,0.53,-0.46,0.498,-0.46);
    quad1(0.5,-0.47,0.535,-0.47,0.558,-0.56,0.528,-0.56);
    quad1(0.53,-0.57,0.56,-0.57,0.58,-0.66,0.555,-0.66);
    quad1(0.558,-0.67,0.588,-0.67,0.608,-0.76,0.58,-0.76);
    quad1(0.58,-0.77,0.608,-0.77,0.63,-0.86,0.6,-0.86);
    quad1(0.6,-0.87,0.63,-0.87,0.655,-0.96,0.63,-0.96);
     quad1(0.63,-0.97,0.65,-0.97,0.66,-1.0,0.64,-1.0);
}
void brizewal()
{
    line(0.48,0.1,0.73,-1.0,250, 248, 240);
    line(0.47,0.1,0.72,-1.0,250, 248, 240);
    line(0.45,0.1,0.48,.1,250, 248, 240);
    line(0.47,0.0,0.5,.0,250, 248, 240);
    line(0.468,-0.1,0.528,-0.1,250, 248, 240);
    line(0.51,-0.2,0.55,-0.2,250, 248, 240);
    line(0.53,-0.3,0.57,-0.3,250, 248, 240);
    line(0.55,-0.4,0.595,-0.4,250, 248, 240);
    line(0.57,-0.5,0.615,-0.5,250, 248, 240);
    line(0.6,-0.6,0.64,-0.6,250, 248, 240);
    line(0.62,-0.7,0.66,-0.7,250, 248, 240);
    line(0.63,-0.8,0.685,-0.8,250, 248, 240);
    line(0.65,-0.9,0.71,-0.9,250, 248, 240);

    line(0.68,0.1,0.94,-1.0,250, 248, 240);
    line(0.67,0.1,0.93,-1.0,250, 248, 240);
    line(0.65,0.1,0.68,.1,250, 248, 240);
    line(0.67,0.0,0.708,.0,250, 248, 240);
    line(0.691,-0.1,0.728,-0.1,250, 248, 240);
    line(0.718,-0.2,0.75,-0.2,250, 248, 240);
    line(0.735,-0.3,0.78,-0.3,250, 248, 240);
    line(0.76,-0.4,0.8,-0.4,250, 248, 240);
    line(0.779,-0.5,0.827,-0.5,250, 248, 240);
    line(0.798,-0.6,0.848,-0.6,250, 248, 240);
    line(0.83,-0.7,0.875,-0.7,250, 248, 240);
    line(0.85,-0.8,0.898,-0.8,250, 248, 240);
    line(0.87,-0.9,0.92,-0.9,250, 248, 240);
}

void darty()
{
    glColor3ub(135, 161, 161);
    quad1(0.85,-0.64,0.85,-0.68,0.81,-0.68,0.81,-0.64);
    quad1(0.81,-0.65,0.81,-0.67,0.8,-0.67,0.8,-0.65);
    circle1(0.8,-0.66,0.015);
    /*2nd potol*/
    glColor3ub(135, 163, 141);
    quad1(0.65,-0.54,0.65,-0.58,0.61,-0.58,0.61,-0.54);
    quad1(0.61,-0.55,0.61,-0.57,0.6,-0.57,0.6,-0.55);
    circle1(0.6,-0.56,0.015);

    /*.3rd potol...*/
    glColor3ub(74, 83, 107);
    quad1(0.65,-0.34,0.65,-0.38,0.61,-0.38,0.61,-0.34);
    quad1(0.61,-0.35,0.61,-0.37,0.6,-0.37,0.6,-0.35);
    circle1(0.6,-0.36,0.015);
  /*..4 th botoom*/
    glColor3ub(105, 63, 95);
    quad1(0.15,-0.34,0.15,-0.38,0.11,-0.38,0.11,-0.34);
    quad1(0.11,-0.35,0.11,-0.37,0.10,-0.37,0.10,-0.35);
    circle1(0.10,-0.36,0.015);
    /*.3rd potol...*/
    glColor3ub(74, 83, 107);
    quad1(0.9,-0.34,0.9,-0.38,0.87,-0.38,0.87,-0.34);
    quad1(0.87,-0.35,0.87,-0.37,0.91,-0.37,0.91,-0.35);
    circle1(0.91,-0.36,0.015);
    /*x axis*/
     glColor3ub(105, 63, 95);
     quad1(0.22,-0.5,0.25,-0.5,0.25,-0.55,0.22,-0.55);
     quad1(0.23,-0.5,0.24,-0.5,0.24,-0.47,0.23,-0.47);
     circle1(0.235,-0.47,0.01);

     glColor3ub(146, 232, 186);
     quad1(0.82,-0.5,0.85,-0.5,0.85,-0.55,0.82,-0.55);
     quad1(0.83,-0.5,0.84,-0.5,0.84,-0.47,0.83,-0.47);
     circle1(0.835,-0.47,0.01);

     glColor3ub(150, 150, 102);
     quad1(0.32,-0.6,0.35,-0.6,0.35,-0.65,0.32,-0.65);
     quad1(0.33,-0.6,0.34,-0.6,0.34,-0.57,0.33,-0.57);
     circle1(0.335,-0.57,0.01);
      glColor3ub(184, 146, 141);
     quad1(0.52,-0.8,0.55,-0.8,0.55,-0.85,0.52,-0.85);
     quad1(.53,-0.8,0.54,-0.8,0.54,-0.77,0.53,-0.77);
     circle1(0.535,-0.77,0.01);
     glColor3ub(184, 146, 141);
     quad1(0.12,-0.8,0.15,-0.8,0.15,-0.85,0.12,-0.85);
     quad1(0.13,-0.8,0.14,-0.8,0.14,-0.77,0.13,-0.77);
     circle1(0.135,-0.77,0.01);
     quad1(0.32,-0.9,0.35,-0.9,0.35,-0.95,0.32,-0.95);
     quad1(0.33,-0.9,0.34,-0.9,0.34,-0.87,0.33,-0.87);
     circle1(0.335,-0.87,0.01);
     quad1(0.82,-0.3,0.85,-0.3,0.85,-0.35,0.82,-0.35);
     quad1(0.83,-0.3,0.84,-0.3,0.84,-0.27,0.83,-0.27);
     circle1(0.835,-0.27,0.01);
     /*data*/
     glColor3ub(31, 24, 29);
     line1(0.65,-0.85,0.6,-0.85);
     line1(0.63,-0.82,0.66,-0.85);
     line1(0.64,-0.85,0.61,-0.88);

     line1(0.85,-0.85,0.8,-0.85);
     line1(0.83,-0.82,0.86,-0.85);
     line1(0.84,-0.85,0.81,-0.88);


     line1(0.85,-0.85,0.8,-0.85);
     line1(0.83,-0.82,0.86,-0.85);
     line1(0.84,-0.85,0.81,-0.88);

     line1(0.25,-0.85,0.2,-0.85);
     line1(0.23,-0.82,0.26,-0.85);
     line1(0.24,-0.85,0.21,-0.88);

     line1(0.45,-0.85,0.4,-0.85);
     line1(0.43,-0.82,0.46,-0.85);
     line1(0.44,-0.85,0.41,-0.88);
     /*dataquad*/
     /*glColor3ub(15, 14, 15);
     quad1(-0.05,-0.6,-0.055,-0.6,-0.055,-.67,-0.05,-0.67);
     quad1(-0.05,-0.64,-0.05,-0.65,-0.02,-0.61,-0.02,-0.62);
     quad1(-0.06,-0.65,-0.09,-0.63,-0.09,-0.64,-0.06,-0.65);

     quad1(0.15,-0.6,0.156,-0.6,0.156,-.66,0.15,-0.66);
     quad1(0.15,-0.63,0.15,-0.64,0.12,-0.60,0.12,-0.61);
     quad1(.16,-0.65,0.19,-0.62,0.19,-0.63,0.16,-0.65);

     quad1(0.35,-0.4,0.36,-0.4,0.36,-.45,0.35,-0.45);
     quad1(0.35,-0.43,0.35,-0.44,0.32,-0.40,0.32,-0.41);
     quad1(0.36,-0.45,0.39,-0.42,0.39,-0.43,0.36,-0.45);


     quad1(0.95,-0.4,0.96,-0.4,0.96,-.45,0.95,-0.45);
     quad1(0.95,-0.43,0.95,-0.44,0.92,-0.40,0.92,-0.41);
     quad1(0.96,-0.45,0.99,-0.42,0.99,-0.43,0.96,-0.45);

     quad1(0.15,-0.3,0.16,-0.3,0.16,-.35,0.15,-0.35);
     quad1(0.15,-0.33,0.15,-0.34,0.12,-0.30,0.12,-0.31);
     quad1(0.16,-0.35,0.19,-0.32,0.19,-0.33,0.16,-0.35);*/
}
GLfloat dartypo=0.0f;
GLfloat  dartys=0.01f;
void datrymove(int value)
{
    if(dartypo<=-1.62f)
    {
        dartys=0.0f;
        //dartypo=1.3f;
    }
     if(dartys==0)
     {
        dartys=0.01f;
        dartypo=1.3f;
     }
    dartypo-=dartys;
   glutPostRedisplay();
  glutTimerFunc(100, datrymove, 0);
}
void darty1()
{
   glColor3ub(135, 161, 161);
    quad1(0.85,-0.64,0.85,-0.68,0.81,-0.68,0.81,-0.64);
    quad1(0.81,-0.65,0.81,-0.67,0.8,-0.67,0.8,-0.65);
    circle1(0.8,-0.66,0.015);
}
GLfloat dartypo2=0.0f;
GLfloat  dartys2=0.01f;
void datry2move(int value)
{
    if(dartypo2<=-1.42f)
    {
        dartys2=0.0f;
        //dartypo=1.3f;
    }
     if(dartys2==0)
     {
        dartys2=0.01f;
        dartypo2=1.3f;
     }
    dartypo2-=dartys2;
   glutPostRedisplay();
  glutTimerFunc(100, datry2move, 0);
}
void darty2()
{
  glColor3ub(135, 163, 141);
    quad1(0.65,-0.54,0.65,-0.58,0.61,-0.58,0.61,-0.54);
    quad1(0.61,-0.55,0.61,-0.57,0.6,-0.57,0.6,-0.55);
    circle1(0.6,-0.56,0.015);
}
GLfloat dartypo3=0.0f;
GLfloat  dartys3=0.01f;
void datry3move(int value)
{
    if(dartypo3<=-0.93f)
    {
        dartys3=0.0f;
        //dartypo=1.3f;
    }
     if(dartys3==0)
     {
        dartys3=0.01f;
        dartypo3=1.3f;
     }
    dartypo3-=dartys3;
   glutPostRedisplay();
  glutTimerFunc(100, datry3move, 0);
}
void darty3()
{
     glColor3ub(105, 63, 95);
    quad1(0.15,-0.34,0.15,-0.38,0.11,-0.38,0.11,-0.34);
    quad1(0.11,-0.35,0.11,-0.37,0.10,-0.37,0.10,-0.35);
    circle1(0.10,-0.36,0.015);
}
GLfloat dartypo4=0.0f;
GLfloat  dartys4=0.01f;
void datry4move(int value)
{
    if(dartypo4<=-1.03f)
    {
        dartys4=0.0f;
        //dartypo=1.3f;
    }
     if(dartys4==0)
     {
        dartys4=0.01f;
        dartypo4=1.3f;
     }
    dartypo4-=dartys4;
   glutPostRedisplay();
  glutTimerFunc(100, datry4move, 0);
}
void darty4()
{     glColor3ub(105, 63, 95);
     quad1(0.22,-0.5,0.25,-0.5,0.25,-0.55,0.22,-0.55);
     quad1(0.23,-0.5,0.24,-0.5,0.24,-0.47,0.23,-0.47);
     circle1(0.235,-0.47,0.01);
}
GLfloat dartypo5=0.0f;
GLfloat  dartys5=0.01f;
void datry5move(int value)
{
    if(dartypo5<=-1.35f)
    {
        dartys5=0.0f;
        //dartypo=1.3f;
    }
     if(dartys5==0)
     {
        dartys5=0.01f;
        dartypo5=1.3f;
     }
    dartypo5-=dartys5;
   glutPostRedisplay();
  glutTimerFunc(100, datry5move, 0);
}
void darty5()
{
    glColor3ub(184, 146, 141);
     quad1(0.52,-0.8,0.55,-0.8,0.55,-0.85,0.52,-0.85);
     quad1(.53,-0.8,0.54,-0.8,0.54,-0.77,0.53,-0.77);
     circle1(0.535,-0.77,0.01);
}
GLfloat dartypo6=0.0f;
GLfloat  dartys6=0.01f;
void datry6move(int value)
{
    if(dartypo6<=-1.75f)
    {
        dartys6=0.0f;
        //dartypo=1.3f;
    }
     if(dartys6==0)
     {
        dartys6=0.01f;
        dartypo6=1.3f;
     }
    dartypo6-=dartys6;
   glutPostRedisplay();
  glutTimerFunc(100, datry6move, 0);
}
void darty6()
{
   glColor3ub(15, 14, 15);
    quad1(0.95,-0.4,0.96,-0.4,0.96,-.45,0.95,-0.45);
     quad1(0.95,-0.43,0.95,-0.44,0.92,-0.40,0.92,-0.41);
     quad1(0.96,-0.45,0.99,-0.42,0.99,-0.43,0.96,-0.45);
}
GLfloat dartypo7=0.0f;
GLfloat  dartys7=0.01f;
void datry7move(int value)
{
    if(dartypo7<=-1.4f)
    {
        dartys7=0.0f;
        //dartypo=1.3f;
    }
     if(dartys7==0)
     {
        dartys7=0.01f;
        dartypo7=1.3f;
     }
    dartypo7-=dartys7;
   glutPostRedisplay();
  glutTimerFunc(100, datry7move, 0);
}

void darty7()
{
     glColor3ub(135, 163, 141);
    quad1(0.65,-0.54,0.65,-0.58,0.61,-0.58,0.61,-0.54);
    quad1(0.61,-0.55,0.61,-0.57,0.6,-0.57,0.6,-0.55);
    circle1(0.6,-0.56,0.015);
}
GLfloat dartypo8=0.0f;
GLfloat  dartys8=0.01f;
void datry8move(int value)
{
    if(dartypo8<=-.99f)
    {
        dartys8=0.0f;
        //dartypo=1.3f;
    }
     if(dartys8==0)
     {
        dartys8=0.01f;
        dartypo8=1.3f;
     }
    dartypo8-=dartys8;
   glutPostRedisplay();
  glutTimerFunc(100, datry8move, 0);
}
void darty8()
{
   glColor3ub(15, 14, 15);
    quad1(0.15,-0.6,0.156,-0.6,0.156,-.66,0.15,-0.66);
     quad1(0.15,-0.63,0.15,-0.64,0.12,-0.60,0.12,-0.61);
     quad1(.16,-0.65,0.19,-0.62,0.19,-0.63,0.16,-0.65);
}
GLfloat dartypo9=0.0f;
GLfloat  dartys9=0.01f;
void datry9move(int value)
{
    if(dartypo9<=-1.15f)
    {
        dartys9=0.0f;
        //dartypo=1.3f;
    }
     if(dartys9==0)
     {
        dartys9=0.01f;
        dartypo9=1.3f;
     }
    dartypo9-=dartys9;
   glutPostRedisplay();
  glutTimerFunc(100, datry9move, 0);
}
void darty9()
{    quad1(0.35,-0.4,0.36,-0.4,0.36,-.45,0.35,-0.45);
     quad1(0.35,-0.43,0.35,-0.44,0.32,-0.40,0.32,-0.41);
     quad1(0.36,-0.45,0.39,-0.42,0.39,-0.43,0.36,-0.45);
}
GLfloat dartypo10=0.0f;
GLfloat  dartys10=0.01f;
void datry10move(int value)
{
    if(dartypo10<=-0.98f)
    {
        dartys10=0.0f;
        //dartypo=1.3f;
    }
     if(dartys10==0)
     {
        dartys10=0.01f;
        dartypo10=1.3f;
     }
    dartypo10-=dartys10;
   glutPostRedisplay();
  glutTimerFunc(100, datry10move, 0);
}
void darty10()
{
   glColor3ub(15, 14, 15);

     quad1(0.15,-0.3,0.16,-0.3,0.16,-.35,0.15,-0.35);
     quad1(0.15,-0.33,0.15,-0.34,0.12,-0.30,0.12,-0.31);
     quad1(0.16,-0.35,0.19,-0.32,0.19,-0.33,0.16,-0.35);
}


void water()
{
    quad(-1.0,-0.05,1.0,-0.05,1.0,-1.0,-1.0,-1.0,18, 51, 28);

}

void waternight()
{
    quad(-1.0,-0.05,1.0,-0.05,1.0,-1.0,-1.0,-1.0,31, 54, 35);

}
void light1()
{
    glColor3ub(56, 46, 25);
    quad1(-0.75,-0.05,-0.76,-0.05,-0.76,-0.01,-0.75,-0.01);
    quad1(-0.79,-0.01,-0.72,-0.01,-0.72,0.0,-0.79,0.0);
    quad1(-0.721,0.0,-0.724,0.0,-0.724,0.04,-0.721,0.04);
    quad1(-0.787,0.0,-0.79,0.0,-0.79,0.04,-0.787,0.04);
    quad1(-0.753,0.0,-0.757,0.0,-0.757,0.02,-0.753,0.02);
    glColor3ub(212, 167, 72);
    circle1(-0.722,0.04,0.015);
    circle1(-0.752,0.03,0.01);
    circle1(-0.786,0.04,0.015);

    glColor3ub(56, 46, 25);
    quad1(-0.95,-0.05,-0.96,-0.05,-0.96,-0.01,-0.95,-0.01);
    quad1(-0.99,-0.01,-0.92,-0.01,-0.92,0.0,-0.99,0.0);
    quad1(-0.921,0.0,-0.924,0.0,-0.924,0.04,-0.921,0.04);
    quad1(-0.987,0.0,-0.99,0.0,-0.99,0.04,-0.987,0.04);
    quad1(-0.953,0.0,-0.957,0.0,-0.957,0.02,-0.953,0.02);
    glColor3ub(212, 167, 72);
    circle1(-0.922,0.04,0.015);
    circle1(-0.952,0.03,0.01);
    circle1(-0.986,0.04,0.015);
    /*light 2...*/
    glColor3ub(56, 46, 25);
    quad1(-0.55,-0.05,-0.56,-0.05,-0.56,-0.01,-0.55,-0.01);
    quad1(-0.59,-0.01,-0.52,-0.01,-0.52,0.0,-0.59,0.0);
    quad1(-0.521,0.0,-0.524,0.0,-0.524,0.04,-0.521,0.04);
    quad1(-0.587,0.0,-0.59,0.0,-0.59,0.04,-0.587,0.04);
    quad1(-0.553,0.0,-0.557,0.0,-0.557,0.02,-0.553,0.02);
    glColor3ub(212, 167, 72);
    circle1(-0.522,0.04,0.015);
    circle1(-0.552,0.03,0.01);
    circle1(-0.586,0.04,0.015);
    /*...3rd light..*/
    glColor3ub(56, 46, 25);
    quad1(-0.35,-0.05,-0.36,-0.05,-0.36,-0.01,-0.35,-0.01);
    quad1(-0.39,-0.01,-0.32,-0.01,-0.32,0.0,-0.39,0.0);
    quad1(-0.321,0.0,-0.324,0.0,-0.324,0.04,-0.321,0.04);
    quad1(-0.387,0.0,-0.39,0.0,-0.39,0.04,-0.387,0.04);
    quad1(-0.353,0.0,-0.357,0.0,-0.357,0.02,-0.353,0.02);
    glColor3ub(212, 167, 72);
    circle1(-0.322,0.04,0.015);
    circle1(-0.352,0.03,0.01);
    circle1(-0.386,0.04,0.015);
    /*...4th light...*/
    glColor3ub(56, 46, 25);
    quad1(-0.15,-0.05,-0.16,-0.05,-0.16,-0.01,-0.15,-0.01);
    quad1(-0.19,-0.01,-0.12,-0.01,-0.12,0.0,-0.19,0.0);
    quad1(-0.121,0.0,-0.124,0.0,-0.124,0.04,-0.121,0.04);
    quad1(-0.187,0.0,-0.19,0.0,-0.19,0.04,-0.187,0.04);
    quad1(-0.153,0.0,-0.157,0.0,-0.157,0.02,-0.153,0.02);
    glColor3ub(212, 167, 72);
    circle1(-0.122,0.04,0.015);
    circle1(-0.152,0.03,0.01);
    circle1(-0.186,0.04,0.015);





    /*....5th light..*/
    glColor3ub(56, 46, 25);
    quad1(0.15,-0.05,0.16,-0.05,0.16,-0.01,0.15,-0.01);
    quad1(0.19,-0.01,0.12,-0.01,0.12,0.0,0.19,0.0);
    quad1(0.121,0.0,0.124,0.0,0.124,0.04,0.121,0.04);
    quad1(0.187,0.0,0.19,0.0,0.19,0.04,0.187,0.04);
    quad1(0.153,0.0,0.157,0.0,0.157,0.02,0.153,0.02);
    glColor3ub(212, 167, 72);
    circle1(0.122,0.04,0.015);
    circle1(0.152,0.03,0.01);
    circle1(0.186,0.04,0.015);
    /*6th light*/
    glColor3ub(56, 46, 25);
    quad1(0.35,-0.05,0.36,-0.05,0.36,-0.01,0.35,-0.01);
    quad1(0.39,-0.01,0.32,-0.01,0.32,0.0,0.39,0.0);
    quad1(0.321,0.0,0.324,0.0,0.324,0.04,0.321,0.04);
    quad1(0.387,0.0,0.39,0.0,0.39,0.04,0.387,0.04);
    quad1(0.353,0.0,0.357,0.0,0.357,0.02,0.353,0.02);
    glColor3ub(212, 167, 72);
    circle1(0.322,0.04,0.015);
    circle1(0.352,0.03,0.01);
    circle1(0.386,0.04,0.015);
    /*7th ligjt*/
    glColor3ub(56, 46, 25);
    quad1(0.85,-0.05,0.86,-0.05,0.86,-0.01,0.85,-0.01);
    quad1(0.89,-0.01,0.82,-0.01,0.82,0.0,0.89,0.0);
    quad1(0.821,0.0,0.824,0.0,0.824,0.04,0.821,0.04);
    quad1(0.887,0.0,0.89,0.0,0.89,0.04,0.887,0.04);
    quad1(0.853,0.0,0.857,0.0,0.857,0.02,0.853,0.02);
    glColor3ub(212, 167, 72);
    circle1(0.822,0.04,0.015);
    circle1(0.852,0.03,0.01);
    circle1(0.886,0.04,0.015);
}
void light1night()
{
    glColor3ub(59, 58, 57);
    quad1(-0.75,-0.05,-0.76,-0.05,-0.76,-0.09,-0.75,-0.09);
    quad1(-0.79,-0.09,-0.72,-0.09,-0.72,-.1,-0.79,-0.1);
    quad1(-0.721,-0.1,-0.724,-0.1,-0.724,-0.13,-0.721,-0.13);
    quad1(-0.787,-0.1,-0.79,-0.1,-0.79,-0.13,-0.787,-0.13);
    quad1(-0.753,-0.1,-0.757,-0.1,-0.757,-0.12,-0.753,-0.12);
    glColor3ub(212, 167, 72);
    circle1(-0.722,-0.13,0.02);
    circle1(-0.752,-0.13,0.015);
    circle1(-0.786,-0.13,0.02);

    glColor3ub(59, 58, 57);
    quad1(-0.95,-0.05,-0.96,-0.05,-0.96,-0.09,-0.95,-0.09);
    quad1(-0.99,-0.09,-0.92,-0.09,-0.92,-.1,-0.99,-0.1);
    quad1(-0.921,-0.1,-0.924,-0.1,-0.924,-0.13,-0.921,-0.13);
    quad1(-0.987,-0.1,-0.99,-0.1,-0.99,-0.13,-0.987,-0.13);
    quad1(-0.953,-0.1,-0.957,-0.1,-0.957,-0.12,-0.953,-0.12);
    glColor3ub(212, 167, 72);
    circle1(-0.922,-0.13,0.02);
    circle1(-0.952,-0.13,0.015);
    circle1(-0.986,-0.13,0.02);
    /*light 2...*/
   glColor3ub(59, 58, 57);
    quad1(-0.55,-0.05,-0.56,-0.05,-0.56,-0.09,-0.55,-0.09);
    quad1(-0.59,-0.09,-0.52,-0.09,-0.52,-0.1,-0.59,-0.1);
    quad1(-0.521,-0.1,-0.524,-0.1,-0.524,-0.13,-0.521,-0.13);
    quad1(-0.587,-0.1,-0.59,-0.1,-0.59,-0.13,-0.587,-0.13);
    quad1(-0.553,-0.1,-0.557,-0.1,-0.557,-0.12,-0.553,-0.12);
    glColor3ub(212, 167, 72);
    circle1(-0.522,-0.13,0.02);
    circle1(-0.552,-0.13,0.015);
    circle1(-0.586,-0.13,0.02);
    /*...3rd light..*/
    glColor3ub(59, 58, 57);
    quad1(-0.35,-0.05,-0.36,-0.05,-0.36,-0.09,-0.35,-0.09);
    quad1(-0.39,-0.09,-0.32,-0.09,-0.32,-0.1,-0.39,-0.1);
    quad1(-0.321,-0.1,-0.324,-0.1,-0.324,-0.13,-0.321,-0.13);
    quad1(-0.387,-0.1,-0.39,-0.1,-0.39,-0.13,-0.387,-0.13);
    quad1(-0.353,-0.1,-0.357,-0.1,-0.357,-0.12,-0.353,-0.12);
    glColor3ub(212, 167, 72);
    circle1(-0.322,-0.13,0.02);
    circle1(-0.352,-0.13,0.015);
    circle1(-0.386,-0.13,0.02);
    /*...4th light...*/
    glColor3ub(59, 58, 57);
    quad1(-0.15,-0.05,-0.16,-0.05,-0.16,-0.09,-0.15,-0.09);
    quad1(-0.19,-0.09,-0.12,-0.09,-0.12,-0.1,-0.19,-0.1);
    quad1(-0.121,-0.1,-0.124,-0.1,-0.124,-0.13,-0.121,-0.13);
    quad1(-0.187,-0.1,-0.19,-0.1,-0.19,-0.13,-0.187,-0.13);
    quad1(-0.153,-0.1,-0.157,-0.1,-0.157,-0.12,-0.153,-0.12);
    glColor3ub(212, 167, 72);
    circle1(-0.122,-0.13,0.02);
    circle1(-0.152,-0.13,0.015);
    circle1(-0.186,-0.13,0.02);
    /*....5th light..*/
    glColor3ub(59, 58, 57);
    quad1(0.15,-0.05,0.16,-0.05,0.16,-0.09,0.15,-0.09);
    quad1(0.19,-0.09,0.12,-0.09,0.12,-0.1,0.19,-0.1);
    quad1(0.121,-0.1,0.124,-0.1,0.124,-0.13,0.121,-0.13);
    quad1(0.187,-0.1,0.19,-0.1,0.19,-0.13,0.187,-0.13);
    quad1(0.153,-0.1,0.157,-0.1,0.157,-0.12,0.153,-0.12);
    glColor3ub(212, 167, 72);
    circle1(0.122,-0.13,0.02);
    circle1(0.152,-0.13,0.015);
    circle1(0.186,-0.13,0.02);
    /*6th light*/
    glColor3ub(59, 58, 57);
    quad1(0.35,-0.05,0.36,-0.05,0.36,-0.09,0.35,-0.09);
    quad1(0.39,-0.09,0.32,-0.09,0.32,-0.1,0.39,-0.1);
    quad1(0.321,-0.1,0.324,-0.1,0.324,-0.13,0.321,-0.13);
    quad1(0.387,-0.1,0.39,-0.1,0.39,-0.13,0.387,-0.13);
    quad1(0.353,-0.1,0.357,-0.1,0.357,-0.13,0.353,-0.12);
    glColor3ub(212, 167, 72);
    circle1(0.322,-0.13,0.02);
    circle1(0.352,-0.13,0.015);
    circle1(0.386,-0.13,0.02);
    /*7th ligjt*/
   glColor3ub(59, 58, 57);
    quad1(0.85,-0.05,0.86,-0.05,0.86,-0.09,0.85,-0.09);
    quad1(0.89,-0.09,0.82,-0.09,0.82,-0.1,0.89,-0.1);
    quad1(0.821,-0.1,0.824,-0.1,0.824,-0.13,0.821,-0.13);
    quad1(0.887,-0.1,0.89,-0.1,0.89,-0.13,0.887,-0.13);
    quad1(0.853,-0.1,0.857,-0.1,0.857,-0.12,0.853,-0.12);
    glColor3ub(212, 167, 72);
    circle1(0.822,-0.13,0.02);
    circle1(0.852,-0.13,0.015);
    circle1(0.886,-0.13,0.02);
}
void light1day()
{
    glColor3ub(56, 46, 25);
    quad1(-0.75,-0.05,-0.76,-0.05,-0.76,-0.01,-0.75,-0.01);
    quad1(-0.79,-0.01,-0.72,-0.01,-0.72,0.0,-0.79,0.0);
    quad1(-0.721,0.0,-0.724,0.0,-0.724,0.04,-0.721,0.04);
    quad1(-0.787,0.0,-0.79,0.0,-0.79,0.04,-0.787,0.04);
    quad1(-0.753,0.0,-0.757,0.0,-0.757,0.02,-0.753,0.02);
    glColor3ub(246, 247, 240);
    circle1(-0.722,0.04,0.015);
    circle1(-0.752,0.03,0.01);
    circle1(-0.786,0.04,0.015);

    glColor3ub(56, 46, 25);
    quad1(-0.95,-0.05,-0.96,-0.05,-0.96,-0.01,-0.95,-0.01);
    quad1(-0.99,-0.01,-0.92,-0.01,-0.92,0.0,-0.99,0.0);
    quad1(-0.921,0.0,-0.924,0.0,-0.924,0.04,-0.921,0.04);
    quad1(-0.987,0.0,-0.99,0.0,-0.99,0.04,-0.987,0.04);
    quad1(-0.953,0.0,-0.957,0.0,-0.957,0.02,-0.953,0.02);
    glColor3ub(246, 247, 240);
    circle1(-0.922,0.04,0.015);
    circle1(-0.952,0.03,0.01);
    circle1(-0.986,0.04,0.015);
    /*light 2...*/
    glColor3ub(56, 46, 25);
    quad1(-0.55,-0.05,-0.56,-0.05,-0.56,-0.01,-0.55,-0.01);
    quad1(-0.59,-0.01,-0.52,-0.01,-0.52,0.0,-0.59,0.0);
    quad1(-0.521,0.0,-0.524,0.0,-0.524,0.04,-0.521,0.04);
    quad1(-0.587,0.0,-0.59,0.0,-0.59,0.04,-0.587,0.04);
    quad1(-0.553,0.0,-0.557,0.0,-0.557,0.02,-0.553,0.02);
    glColor3ub(246, 247, 240);
    circle1(-0.522,0.04,0.015);
    circle1(-0.552,0.03,0.01);
    circle1(-0.586,0.04,0.015);
    /*...3rd light..*/
    glColor3ub(56, 46, 25);
    quad1(-0.35,-0.05,-0.36,-0.05,-0.36,-0.01,-0.35,-0.01);
    quad1(-0.39,-0.01,-0.32,-0.01,-0.32,0.0,-0.39,0.0);
    quad1(-0.321,0.0,-0.324,0.0,-0.324,0.04,-0.321,0.04);
    quad1(-0.387,0.0,-0.39,0.0,-0.39,0.04,-0.387,0.04);
    quad1(-0.353,0.0,-0.357,0.0,-0.357,0.02,-0.353,0.02);
    glColor3ub(246, 247, 240);
    circle1(-0.322,0.04,0.015);
    circle1(-0.352,0.03,0.01);
    circle1(-0.386,0.04,0.015);
    /*...4th light...*/
    glColor3ub(56, 46, 25);
    quad1(-0.15,-0.05,-0.16,-0.05,-0.16,-0.01,-0.15,-0.01);
    quad1(-0.19,-0.01,-0.12,-0.01,-0.12,0.0,-0.19,0.0);
    quad1(-0.121,0.0,-0.124,0.0,-0.124,0.04,-0.121,0.04);
    quad1(-0.187,0.0,-0.19,0.0,-0.19,0.04,-0.187,0.04);
    quad1(-0.153,0.0,-0.157,0.0,-0.157,0.02,-0.153,0.02);
    glColor3ub(246, 247, 240);
    circle1(-0.122,0.04,0.015);
    circle1(-0.152,0.03,0.01);
    circle1(-0.186,0.04,0.015);
    /*....5th light..*/
    glColor3ub(56, 46, 25);
    quad1(0.15,-0.05,0.16,-0.05,0.16,-0.01,0.15,-0.01);
    quad1(0.19,-0.01,0.12,-0.01,0.12,0.0,0.19,0.0);
    quad1(0.121,0.0,0.124,0.0,0.124,0.04,0.121,0.04);
    quad1(0.187,0.0,0.19,0.0,0.19,0.04,0.187,0.04);
    quad1(0.153,0.0,0.157,0.0,0.157,0.02,0.153,0.02);
    glColor3ub(246, 247, 240);
    circle1(0.122,0.04,0.015);
    circle1(0.152,0.03,0.01);
    circle1(0.186,0.04,0.015);
    /*6th light*/
    glColor3ub(56, 46, 25);
    quad1(0.35,-0.05,0.36,-0.05,0.36,-0.01,0.35,-0.01);
    quad1(0.39,-0.01,0.32,-0.01,0.32,0.0,0.39,0.0);
    quad1(0.321,0.0,0.324,0.0,0.324,0.04,0.321,0.04);
    quad1(0.387,0.0,0.39,0.0,0.39,0.04,0.387,0.04);
    quad1(0.353,0.0,0.357,0.0,0.357,0.02,0.353,0.02);
    glColor3ub(246, 247, 240);
    circle1(0.322,0.04,0.015);
    circle1(0.352,0.03,0.01);
    circle1(0.386,0.04,0.015);
    /*7th ligjt*/
    glColor3ub(56, 46, 25);
    quad1(0.85,-0.05,0.86,-0.05,0.86,-0.01,0.85,-0.01);
    quad1(0.89,-0.01,0.82,-0.01,0.82,0.0,0.89,0.0);
    quad1(0.821,0.0,0.824,0.0,0.824,0.04,0.821,0.04);
    quad1(0.887,0.0,0.89,0.0,0.89,0.04,0.887,0.04);
    quad1(0.853,0.0,0.857,0.0,0.857,0.02,0.853,0.02);
    glColor3ub(246, 247, 240);
    circle1(0.822,0.04,0.015);
    circle1(0.852,0.03,0.01);
    circle1(0.886,0.04,0.015);
    //last light

}
void tree()
{
    /*tree 1..*/

    glColor3ub(92, 75, 42);
    quad1(-0.85,-0.05,-.87,-0.05,-0.87,0.10,-0.85,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.86,0.08);
    glVertex2f(-0.85,0.1);
    glVertex2f(-0.82,0.12);
    glVertex2f(-0.85,0.11);
    glVertex2f(-0.84,0.14);
    glVertex2f(-0.86,0.11);
    glVertex2f(-0.88,0.14);
    glVertex2f(-0.87,0.11);
    glVertex2f(-0.91,0.12);
    glVertex2f(-0.87,0.1);
    glEnd();

    /*..tree2..*/
    glColor3ub(92, 75, 42);
    quad1(-0.65,-0.05,-.67,-0.05,-0.67,0.10,-0.65,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.66,0.08);
    glVertex2f(-0.65,0.1);
    glVertex2f(-0.62,0.12);
    glVertex2f(-0.65,0.11);
    glVertex2f(-0.64,0.14);
    glVertex2f(-0.66,0.11);
    glVertex2f(-0.68,0.14);
    glVertex2f(-0.67,0.11);
    glVertex2f(-0.71,0.12);
    glVertex2f(-0.67,0.10);
    glEnd();
    //tree3
    glColor3ub(92, 75, 42);
    quad1(-0.45,-0.05,-.47,-0.05,-0.47,0.10,-0.45,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.46,0.08);
    glVertex2f(-0.45,0.10);
    glVertex2f(-0.42,0.12);
    glVertex2f(-0.45,0.11);
    glVertex2f(-0.44,0.14);
    glVertex2f(-0.46,0.11);
    glVertex2f(-0.48,0.14);
    glVertex2f(-0.47,0.11);
    glVertex2f(-0.51,0.12);
    glVertex2f(-0.47,0.10);
    glEnd();
    //tree4
    glColor3ub(92, 75, 42);
    quad1(-0.25,-0.05,-.27,-0.05,-0.27,0.10,-0.25,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.26,0.08);
    glVertex2f(-0.25,0.10);
    glVertex2f(-0.22,0.12);
    glVertex2f(-0.25,0.11);
    glVertex2f(-0.24,0.14);
    glVertex2f(-0.26,0.11);
    glVertex2f(-0.28,0.14);
    glVertex2f(-0.27,0.11);
    glVertex2f(-0.31,0.12);
    glVertex2f(-0.27,0.10);
    glEnd();
    //tree5
    glColor3ub(92, 75, 42);
    quad1(-0.05,-0.05,-.07,-0.05,-0.07,0.10,-0.05,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.06,0.08);
    glVertex2f(-0.05,0.10);
    glVertex2f(-0.02,0.12);
    glVertex2f(-0.05,0.11);
    glVertex2f(-0.04,0.14);
    glVertex2f(-0.06,0.11);
    glVertex2f(-0.08,0.14);
    glVertex2f(-0.07,0.11);
    glVertex2f(-0.11,0.12);
    glVertex2f(-0.07,0.10);
    glEnd();
    //tree6
    glColor3ub(92, 75, 42);
    quad1(0.05,-0.05,.07,-0.05,0.07,0.10,0.05,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.06,0.08);
    glVertex2f(0.05,0.10);
    glVertex2f(0.02,0.12);
    glVertex2f(0.05,0.11);
    glVertex2f(0.04,0.14);
    glVertex2f(0.06,0.11);
    glVertex2f(0.08,0.14);
    glVertex2f(0.07,0.11);
    glVertex2f(0.11,0.12);
    glVertex2f(0.07,0.10);
    glEnd();
    //tree7
     glColor3ub(92, 75, 42);
    quad1(0.25,-0.05,.27,-0.05,0.27,0.10,0.25,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.26,0.08);
    glVertex2f(0.25,0.10);
    glVertex2f(0.22,0.12);
    glVertex2f(0.25,0.11);
    glVertex2f(0.24,0.14);
    glVertex2f(0.26,0.11);
    glVertex2f(0.28,0.14);
    glVertex2f(0.27,0.11);
    glVertex2f(0.31,0.12);
    glVertex2f(0.27,0.10);
    glEnd();

    //tree8
    glColor3ub(92, 75, 42);
    quad1(0.95,-0.05,.97,-0.05,0.97,0.10,0.95,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.96,0.08);
    glVertex2f(0.95,0.10);
    glVertex2f(0.92,0.12);
    glVertex2f(0.95,0.11);
    glVertex2f(0.94,0.14);
    glVertex2f(0.96,0.11);
    glVertex2f(0.98,0.14);
    glVertex2f(0.97,0.11);
    glVertex2f(1.0,0.12);
    glVertex2f(0.97,0.10);
    glEnd();
}
void treenight()
{
    /*tree 1..*/

    glColor3ub(33, 34, 36);
    quad1(-0.85,-0.05,-.87,-0.05,-0.87,0.10,-0.85,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.86,0.08);
    glVertex2f(-0.85,0.1);
    glVertex2f(-0.82,0.12);
    glVertex2f(-0.85,0.11);
    glVertex2f(-0.84,0.14);
    glVertex2f(-0.86,0.11);
    glVertex2f(-0.88,0.14);
    glVertex2f(-0.87,0.11);
    glVertex2f(-0.9,0.13);
    glVertex2f(-0.87,0.1);
    glEnd();

    /*..tree2..*/

    quad1(-0.65,-0.05,-.67,-0.05,-0.67,0.10,-0.65,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.66,0.08);
    glVertex2f(-0.65,0.1);
    glVertex2f(-0.62,0.12);
    glVertex2f(-0.65,0.11);
    glVertex2f(-0.64,0.14);
    glVertex2f(-0.66,0.11);
    glVertex2f(-0.68,0.14);
    glVertex2f(-0.67,0.11);
    glVertex2f(-0.7,0.13);
    glVertex2f(-0.67,0.10);
    glEnd();
    //tree3

    quad1(-0.45,-0.05,-.47,-0.05,-0.47,0.10,-0.45,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.46,0.08);
    glVertex2f(-0.45,0.10);
    glVertex2f(-0.42,0.12);
    glVertex2f(-0.45,0.11);
    glVertex2f(-0.44,0.14);
    glVertex2f(-0.46,0.11);
    glVertex2f(-0.48,0.14);
    glVertex2f(-0.47,0.11);
    glVertex2f(-0.5,0.13);
    glVertex2f(-0.47,0.10);
    glEnd();
    //tree4

    quad1(-0.25,-0.05,-.27,-0.05,-0.27,0.10,-0.25,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.26,0.08);
    glVertex2f(-0.25,0.10);
    glVertex2f(-0.22,0.12);
    glVertex2f(-0.25,0.11);
    glVertex2f(-0.24,0.14);
    glVertex2f(-0.26,0.11);
    glVertex2f(-0.28,0.14);
    glVertex2f(-0.27,0.11);
    glVertex2f(-0.3,0.13);
    glVertex2f(-0.27,0.10);
    glEnd();
    //tree5

    quad1(-0.05,-0.05,-.07,-0.05,-0.07,0.10,-0.05,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(-.06,0.08);
    glVertex2f(-0.05,0.10);
    glVertex2f(-0.02,0.12);
    glVertex2f(-0.05,0.11);
    glVertex2f(-0.04,0.14);
    glVertex2f(-0.06,0.11);
    glVertex2f(-0.08,0.14);
    glVertex2f(-0.07,0.11);
    glVertex2f(-0.1,0.13);
    glVertex2f(-0.07,0.10);
    glEnd();
    //tree6

    quad1(0.05,-0.05,.07,-0.05,0.07,0.10,0.05,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.06,0.08);
    glVertex2f(0.05,0.10);
    glVertex2f(0.02,0.12);
    glVertex2f(0.05,0.11);
    glVertex2f(0.04,0.14);
    glVertex2f(0.06,0.11);
    glVertex2f(0.08,0.14);
    glVertex2f(0.07,0.11);
    glVertex2f(0.1,0.13);
    glVertex2f(0.07,0.10);
    glEnd();
    //tree7

    quad1(0.25,-0.05,.27,-0.05,0.27,0.10,0.25,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.26,0.08);
    glVertex2f(0.25,0.10);
    glVertex2f(0.22,0.12);
    glVertex2f(0.25,0.11);
    glVertex2f(0.24,0.14);
    glVertex2f(0.26,0.11);
    glVertex2f(0.28,0.14);
    glVertex2f(0.27,0.11);
    glVertex2f(0.3,0.13);
    glVertex2f(0.27,0.10);
    glEnd();

    //tree8

    quad1(0.95,-0.05,.97,-0.05,0.97,0.10,0.95,0.10);
    glBegin(GL_POLYGON);
    glVertex2f(.96,0.08);
    glVertex2f(0.95,0.10);
    glVertex2f(0.92,0.12);
    glVertex2f(0.95,0.11);
    glVertex2f(0.94,0.14);
    glVertex2f(0.96,0.11);
    glVertex2f(0.98,0.14);
    glVertex2f(0.97,0.11);
    glVertex2f(1.0,0.13);
    glVertex2f(0.97,0.10);
    glEnd();
}
void leaf1()
{
  glColor3ub(6, 97, 6);

  circle1(-0.82,0.12,0.022);

 // circle1(-0.86,0.14,0.02);
  /*tree2 leaf*/
  circle1(-0.62,0.12,0.022);
  //tree3
  circle1(-0.42,0.12,0.022);
  //tree4
  circle1(-0.22,0.12,0.022);
  //tree5
  circle1(-0.02,0.12,0.022);
  //tree6
  circle1(0.02,0.12,0.022);
  //tree7
  circle1(0.22,0.12,0.022);
  //tree8
  circle1(0.92,0.12,0.022);

}

void leaf1flower()
{
    glColor3ub(201, 78, 20);
    triangle1(-0.82,0.12,-0.83,0.1,-0.81,0.1);
    triangle1(-0.82,0.12,-0.804,0.11,-0.804,0.13);
    triangle1(-0.82,0.12,-0.81,0.137,-0.83,0.137);
    triangle1(-0.82,0.12,-0.838,0.13,-0.838,0.11);
    glColor3ub(224, 184, 63);
    circle1(-0.82,0.12,0.005);
    //2nd tree
    glColor3ub(201, 78, 20);
    triangle1(-0.62,0.12,-0.63,0.1,-0.61,0.1);
    triangle1(-0.62,0.12,-0.604,0.11,-0.604,0.13);
    triangle1(-0.62,0.12,-0.61,0.137,-0.63,0.137);
    triangle1(-0.62,0.12,-0.638,0.13,-0.638,0.11);
    glColor3ub(224, 184, 63);
    circle1(-0.62,0.12,0.005);
    //3rd flower
    glColor3ub(201, 78, 20);
    triangle1(-0.42,0.12,-0.43,0.1,-0.41,0.1);
    triangle1(-0.42,0.12,-0.404,0.11,-0.404,0.13);
    triangle1(-0.42,0.12,-0.41,0.137,-0.43,0.137);
    triangle1(-0.42,0.12,-0.438,0.13,-0.438,0.11);
    glColor3ub(224, 184, 63);
    circle1(-0.42,0.12,0.005);
    //4th flower
    glColor3ub(201, 78, 20);
    triangle1(-0.22,0.12,-0.23,0.1,-0.21,0.1);
    triangle1(-0.22,0.12,-0.204,0.11,-0.204,0.13);
    triangle1(-0.22,0.12,-0.21,0.137,-0.23,0.137);
    triangle1(-0.22,0.12,-0.238,0.13,-0.238,0.11);
    glColor3ub(224, 184, 63);
    circle1(-0.22,0.12,0.005);
    //5th flower
    glColor3ub(201, 78, 20);
    triangle1(-0.02,0.12,-0.03,0.1,-0.01,0.1);
    triangle1(-0.02,0.12,-0.004,0.11,-0.004,0.13);
    triangle1(-0.02,0.12,-0.01,0.137,-0.03,0.137);
    triangle1(-0.02,0.12,-0.038,0.13,-0.038,0.11);
    glColor3ub(224, 184, 63);
    circle1(-0.02,0.12,0.005);
    //6
    glColor3ub(201, 78, 20);
    triangle1(0.02,0.12,0.03,0.1,0.01,0.1);
    triangle1(0.02,0.12,0.004,0.11,0.004,0.13);
    triangle1(0.02,0.12,0.01,0.137,0.03,0.137);
    triangle1(0.02,0.12,0.038,0.13,0.038,0.11);
    glColor3ub(224, 184, 63);
    circle1(0.02,0.12,0.005);
    //7
    glColor3ub(201, 78, 20);
    triangle1(0.22,0.12,0.23,0.1,0.21,0.1);
    triangle1(0.22,0.12,0.204,0.11,0.204,0.13);
    triangle1(0.22,0.12,0.21,0.137,0.23,0.137);
    triangle1(0.22,0.12,0.238,0.13,0.238,0.11);
    glColor3ub(224, 184, 63);
    circle1(0.22,0.12,0.005);
    //8
    glColor3ub(201, 78, 20);
    triangle1(0.92,0.12,0.93,0.1,0.91,0.1);
    triangle1(0.92,0.12,0.904,0.11,0.904,0.13);
    triangle1(0.92,0.12,0.91,0.137,0.93,0.137);
    triangle1(0.92,0.12,0.938,0.13,0.938,0.11);
    glColor3ub(224, 184, 63);
    circle1(0.92,0.12,0.005);

    //9
    glColor3ub(201, 78, 20);
    triangle1(-0.84,0.14,-0.835,0.122,-0.85,0.122);
    triangle1(-0.84,0.14,-0.82,0.132,-0.82,0.147);
    triangle1(-0.84,0.14,-0.83,0.157,-0.85,0.157);
    triangle1(-0.84,0.14,-0.858,0.15,-0.858,0.13);
    glColor3ub(224, 184, 63);
    circle1(-0.84,0.14,0.005);
   //10
    glColor3ub(201, 78, 20);
    triangle1(-0.64,0.14,-0.635,0.122,-0.65,0.122);
    triangle1(-0.64,0.14,-0.62,0.132,-0.62,0.147);
    triangle1(-0.64,0.14,-0.63,0.157,-0.65,0.157);
    triangle1(-0.64,0.14,-0.658,0.15,-0.658,0.13);
    glColor3ub(224, 184, 63);
    circle1(-0.64,0.14,0.005);
   //11
    glColor3ub(201, 78, 20);
    triangle1(-0.44,0.14,-0.435,0.122,-0.45,0.122);
    triangle1(-0.44,0.14,-0.42,0.132,-0.42,0.147);
    triangle1(-0.44,0.14,-0.43,0.157,-0.45,0.157);
    triangle1(-0.44,0.14,-0.458,0.15,-0.458,0.13);
    glColor3ub(224, 184, 63);
    circle1(-0.44,0.14,0.005);
   //12
    glColor3ub(201, 78, 20);
    triangle1(-0.24,0.14,-0.235,0.122,-0.25,0.122);
    triangle1(-0.24,0.14,-0.22,0.132,-0.22,0.147);
    triangle1(-0.24,0.14,-0.23,0.157,-0.25,0.157);
    triangle1(-0.24,0.14,-0.258,0.15,-0.258,0.13);
    glColor3ub(224, 184, 63);
    circle1(-0.24,0.14,0.005);
   //13
    glColor3ub(201, 78, 20);
    triangle1(-0.04,0.14,-0.035,0.122,-0.05,0.122);
    triangle1(-0.04,0.14,-0.02,0.132,-0.02,0.147);
    triangle1(-0.04,0.14,-0.03,0.157,-0.05,0.157);
    triangle1(-0.04,0.14,-0.058,0.15,-0.058,0.13);
    glColor3ub(224, 184, 63);
    circle1(-0.04,0.14,0.005);
   //14
    glColor3ub(201, 78, 20);
    triangle1(0.04,0.14,0.035,0.122,0.05,0.122);
    triangle1(0.04,0.14,0.02,0.132,0.02,0.147);
    triangle1(0.04,0.14,0.03,0.157,0.05,0.157);
    triangle1(0.04,0.14,0.058,0.15,0.058,0.13);
    glColor3ub(224, 184, 63);
    circle1(0.04,0.14,0.005);
   //15
    glColor3ub(201, 78, 20);
    triangle1(0.24,0.14,0.235,0.122,0.25,0.122);
    triangle1(0.24,0.14,0.22,0.132,0.22,0.147);
    triangle1(0.24,0.14,0.23,0.157,0.25,0.157);
    triangle1(0.24,0.14,0.258,0.15,0.258,0.13);
    glColor3ub(224, 184, 63);
    circle1(0.24,0.14,0.005);
   //16
    glColor3ub(201, 78, 20);
    triangle1(0.94,0.14,0.935,0.122,0.95,0.122);
    triangle1(0.94,0.14,0.92,0.132,0.92,0.147);
    triangle1(0.94,0.14,0.93,0.157,0.95,0.157);
    triangle1(0.94,0.14,0.958,0.15,0.958,0.13);
    glColor3ub(224, 184, 63);
    circle1(0.94,0.14,0.005);
    //17
    glColor3ub(201, 78, 20);
    triangle1(-0.88,0.14,-0.888,0.122,-0.862,0.122);
    triangle1(-0.88,0.14,-0.863,0.131,-0.863,0.15);
    triangle1(-0.88,0.14,-0.862,0.157,-0.886,0.157);
    triangle1(-0.88,0.14,-0.895,0.155,-0.895,0.135);
    glColor3ub(224, 184, 63);
    circle1(-0.88,0.14,0.005);
    //18
    glColor3ub(201, 78, 20);
    triangle1(-0.68,0.14,-0.688,0.122,-0.662,0.122);
    triangle1(-0.68,0.14,-0.663,0.131,-0.663,0.15);
    triangle1(-0.68,0.14,-0.662,0.157,-0.686,0.157);
    triangle1(-0.68,0.14,-0.695,0.155,-0.695,0.135);
    glColor3ub(224, 184, 63);
    circle1(-0.68,0.14,0.005);
    //19
    glColor3ub(201, 78, 20);
    triangle1(-0.48,0.14,-0.488,0.122,-0.462,0.122);
    triangle1(-0.48,0.14,-0.463,0.131,-0.463,0.15);
    triangle1(-0.48,0.14,-0.462,0.157,-0.486,0.157);
    triangle1(-0.48,0.14,-0.495,0.155,-0.495,0.135);
    glColor3ub(224, 184, 63);
    circle1(-0.48,0.14,0.005);
    //20
    glColor3ub(201, 78, 20);
    triangle1(-0.28,0.14,-0.288,0.122,-0.262,0.122);
    triangle1(-0.28,0.14,-0.263,0.131,-0.263,0.15);
    triangle1(-0.28,0.14,-0.262,0.157,-0.286,0.157);
    triangle1(-0.28,0.14,-0.295,0.155,-0.295,0.135);
    glColor3ub(224, 184, 63);
    circle1(-0.28,0.14,0.005);
    //21
    glColor3ub(201, 78, 20);
    triangle1(-0.08,0.14,-0.088,0.122,-0.062,0.122);
    triangle1(-0.08,0.14,-0.063,0.131,-0.063,0.15);
    triangle1(-0.08,0.14,-0.062,0.157,-0.086,0.157);
    triangle1(-0.08,0.14,-0.095,0.155,-0.095,0.135);
    glColor3ub(224, 184, 63);
    circle1(-0.08,0.14,0.005);
    //22
    glColor3ub(201, 78, 20);
    triangle1(0.08,0.14,0.088,0.122,0.062,0.122);
    triangle1(0.08,0.14,0.063,0.131,0.063,0.15);
    triangle1(0.08,0.14,0.062,0.157,0.086,0.157);
    triangle1(0.08,0.14,0.095,0.155,0.095,0.135);
    glColor3ub(224, 184, 63);
    circle1(0.08,0.14,0.005);
    //23
    glColor3ub(201, 78, 20);
    triangle1(0.28,0.14,0.288,0.122,0.262,0.122);
    triangle1(0.28,0.14,0.263,0.131,0.263,0.15);
    triangle1(0.28,0.14,0.262,0.157,0.286,0.157);
    triangle1(0.28,0.14,0.295,0.155,0.295,0.135);
    glColor3ub(224, 184, 63);
    circle1(0.28,0.14,0.005);
    //24
    glColor3ub(201, 78, 20);
    triangle1(0.98,0.14,0.988,0.122,0.962,0.122);
    triangle1(0.98,0.14,0.963,0.131,0.963,0.15);
    triangle1(0.98,0.14,0.962,0.157,0.986,0.157);
    triangle1(0.98,0.14,0.995,0.155,0.995,0.135);
    glColor3ub(224, 184, 63);
    circle1(0.98,0.14,0.005);
    //25
     glColor3ub(201, 78, 20);
     triangle1(-0.91,0.12,-0.89,0.11,-0.89,0.13);
     triangle1(-0.91,0.12,-0.901,0.1,-0.926,0.1);
     triangle1(-0.91,0.12,-0.93,0.11,-0.93,0.13);
     triangle1(-0.91,0.12,-0.9,0.14,-0.92,0.14);
      glColor3ub(224, 184, 63);
    circle1(-0.91,0.12,0.005);
    //26
    glColor3ub(201, 78, 20);
     triangle1(-0.71,0.12,-0.69,0.11,-0.69,0.13);
     triangle1(-0.71,0.12,-0.701,0.1,-0.726,0.1);
     triangle1(-0.71,0.12,-0.73,0.11,-0.73,0.13);
     triangle1(-0.71,0.12,-0.7,0.14,-0.72,0.14);
      glColor3ub(224, 184, 63);
    circle1(-0.71,0.12,0.005);
    //27
    glColor3ub(201, 78, 20);
     triangle1(-0.51,0.12,-0.49,0.11,-0.49,0.13);
     triangle1(-0.51,0.12,-0.501,0.1,-0.526,0.1);
     triangle1(-0.51,0.12,-0.53,0.11,-0.53,0.13);
     triangle1(-0.51,0.12,-0.5,0.14,-0.52,0.14);
      glColor3ub(224, 184, 63);
    circle1(-0.51,0.12,0.005);
    //28
    glColor3ub(201, 78, 20);
     triangle1(-0.31,0.12,-0.29,0.11,-0.29,0.13);
     triangle1(-0.31,0.12,-0.301,0.1,-0.326,0.1);
     triangle1(-0.31,0.12,-0.33,0.11,-0.33,0.13);
     triangle1(-0.31,0.12,-0.3,0.14,-0.32,0.14);
      glColor3ub(224, 184, 63);
    circle1(-0.31,0.12,0.005);
    //29
    glColor3ub(201, 78, 20);
     triangle1(-0.11,0.12,-0.09,0.11,-0.09,0.13);
     triangle1(-0.11,0.12,-0.101,0.1,-0.126,0.1);
     triangle1(-0.11,0.12,-0.13,0.11,-0.13,0.13);
     triangle1(-0.11,0.12,-0.1,0.14,-0.12,0.14);
      glColor3ub(224, 184, 63);
    circle1(-0.11,0.12,0.005);
    //30
    glColor3ub(201, 78, 20);
     triangle1(0.11,0.12,0.09,0.11,0.09,0.13);
     triangle1(0.11,0.12,0.101,0.1,0.126,0.1);
     triangle1(0.11,0.12,0.13,0.11,0.13,0.13);
     triangle1(0.11,0.12,0.1,0.14,0.12,0.14);
      glColor3ub(224, 184, 63);
    circle1(0.11,0.12,0.005);
    //31
    glColor3ub(201, 78, 20);
     triangle1(0.31,0.12,0.29,0.11,0.29,0.13);
     triangle1(0.31,0.12,0.301,0.1,0.326,0.1);
     triangle1(0.31,0.12,0.33,0.11,0.33,0.13);
     triangle1(0.31,0.12,0.3,0.14,0.32,0.14);
      glColor3ub(224, 184, 63);
    circle1(0.31,0.12,0.005);
    //32
    glColor3ub(201, 78, 20);
     triangle1(1.0,0.12,0.99,0.11,0.99,0.13);
     triangle1(1.0,0.12,1.01,0.1,1.06,0.1);
     triangle1(1.0,0.12,1.03,0.11,1.03,0.13);
     triangle1(1.0,0.12,1.03,0.14,1.02,0.14);
      glColor3ub(224, 184, 63);
    circle1(1.0,0.12,0.005);

}
void leaf1night()
{
  glColor3ub(33, 34, 36);

  circle1(-0.82,0.12,0.023);

 // circle1(-0.86,0.14,0.02);
  /*tree2 leaf*/
  circle1(-0.62,0.12,0.022);
  //tree3
  circle1(-0.42,0.12,0.022);
  //tree4
  circle1(-0.22,0.12,0.022);
  //tree5
  circle1(-0.02,0.12,0.022);
  //tree6
  circle1(0.02,0.12,0.022);
  //tree7
  circle1(0.22,0.12,0.022);
  //tree8
  circle1(0.92,0.12,0.022);
  circle1(-0.84,0.14,0.022);
   //tree2
   circle1(-0.64,0.14,0.022);
   //tree3
   circle1(-0.44,0.14,0.022);
   //tree4
   circle1(-0.24,0.14,0.022);
   //trre5
   circle1(-0.04,0.14,0.022);
   //tree6
   circle1(0.04,0.14,0.022);
   //tree7
   circle1(0.24,0.14,0.022);
   //tree8
   circle1(0.94,0.14,0.022);
   circle1(-0.88,0.14,0.022);
   //tre2
     circle1(-0.68,0.14,0.022);
     //tree3
     circle1(-0.48,0.14,0.022);
     //tree4
     circle1(-0.28,0.14,0.022);
     //tree5
     circle1(-0.08,0.14,0.022);
     //tree6
     circle1(0.08,0.14,0.022);
     //tree7
     circle1(0.28,0.14,0.022);
     //tree8
     circle1(0.98,0.14,0.022);
      circle1(-0.9,0.13,0.022);
    //tree2
    circle1(-0.7,0.13,0.022);
    //tree3
    circle1(-0.5,0.13,0.022);
    //tree4
    circle1(-0.3,0.13,0.022);
    //tree5
    circle1(-0.1,0.13,0.022);
    //tree6
    circle1(0.1,0.13,0.022);
    //tree7
    circle1(0.3,0.13,0.022);
    //tree8
    circle1(1.0,0.13,0.022);
}


/*void leaf5()
{   glColor3ub(6, 97, 6);
    circle1(-0.86,0.14,0.022);
    circle1(-0.66,0.14,0.022);
    circle1(-0.46,0.14,0.022);
    circle1(-0.26,0.14,0.022);
    circle1(-0.06,0.14,0.022);
    circle1(0.06,0.14,0.022);
    circle1(0.26,0.14,0.022);
    circle1(0.96,0.14,0.022);
}*/
void leaf2()
{
   glColor3ub(6, 97, 6);

   circle1(-0.84,0.14,0.022);
   //tree2
   circle1(-0.64,0.14,0.022);
   //tree3
   circle1(-0.44,0.14,0.022);
   //tree4
   circle1(-0.24,0.14,0.022);
   //trre5
   circle1(-0.04,0.14,0.022);
   //tree6
   circle1(0.04,0.14,0.022);
   //tree7
   circle1(0.24,0.14,0.022);
   //tree8
   circle1(0.94,0.14,0.022);

}
void leaf3()
{  glColor3ub(6, 97, 6);

   circle1(-0.88,0.14,0.022);
   //tre2
     circle1(-0.68,0.14,0.022);
     //tree3
     circle1(-0.48,0.14,0.022);
     //tree4
     circle1(-0.28,0.14,0.022);
     //tree5
     circle1(-0.08,0.14,0.022);
     //tree6
     circle1(0.08,0.14,0.022);
     //tree7
     circle1(0.28,0.14,0.022);
     //tree8
     circle1(0.98,0.14,0.022);

}
void leaf4()
{
    glColor3ub(6, 97, 6);

    circle1(-0.91,0.12,0.022);
    //tree2
    circle1(-0.71,0.12,0.022);
    //tree3
    circle1(-0.51,0.12,0.022);
    //tree4
    circle1(-0.31,0.12,0.022);
    //tree5
    circle1(-0.11,0.12,0.022);
    //tree6
    circle1(0.11,0.12,0.022);
    //tree7
    circle1(0.31,0.12,0.022);
    //tree8
    circle1(1.0,0.12,0.022);
}
void car6()
{
    glColor3ub(95, 138, 153);
    quad1(0.63,-0.21,0.67,-0.19,0.7,-0.3,0.66,-0.33);
    quad1(0.64,-0.23,0.66,-0.23,0.69,-0.27,0.68,-0.27);
    //triangle1(0.66,-0.33,0.7,-0.3,0.69,-0.35);
    //triangle1(0.63,-0.21,0.67,-0.19,0.64,-0.17);
    quad1(0.63,-0.21,0.67,-0.19,0.65,-0.175,0.64,-0.18);
    quad1(0.66,-0.33,0.7,-0.3,0.68,-0.34,0.67,-0.335);
   glColor3ub(82, 89, 102);
    quad1(0.63,-0.21,0.67,-0.19,0.668,-0.23,0.655,-0.24);
    quad1(0.66,-0.33,0.7,-0.3,0.68,-0.28,0.662,-0.29);
    quad1(0.634,-0.22,0.648,-0.26,0.65,-0.26,0.65,-0.24);
   quad1(0.647,-0.27,0.649,-0.27,0.657,-0.28,0.658,-0.32);
    quad1(0.672,-0.20,0.68,-0.24,0.673,-0.24,0.673,-0.23);
    quad1(0.685,-0.26,0.68,-0.26,0.68,-0.27,0.7,-0.29);
}
void car6night()
{
    glColor3ub(95, 138, 153);
    quad1(0.63,-0.21,0.67,-0.19,0.7,-0.3,0.66,-0.33);
    quad1(0.64,-0.23,0.66,-0.23,0.69,-0.27,0.68,-0.27);
    //triangle1(0.66,-0.33,0.7,-0.3,0.69,-0.35);
    //triangle1(0.63,-0.21,0.67,-0.19,0.64,-0.17);
    quad1(0.63,-0.21,0.67,-0.19,0.65,-0.175,0.64,-0.18);
    quad1(0.66,-0.33,0.7,-0.3,0.68,-0.34,0.67,-0.335);
   glColor3ub(82, 89, 102);
    quad1(0.63,-0.21,0.67,-0.19,0.668,-0.23,0.655,-0.24);
    quad1(0.66,-0.33,0.7,-0.3,0.68,-0.28,0.662,-0.29);
    quad1(0.634,-0.22,0.648,-0.26,0.65,-0.26,0.65,-0.24);
   quad1(0.647,-0.27,0.649,-0.27,0.657,-0.28,0.658,-0.32);
    quad1(0.672,-0.20,0.68,-0.24,0.673,-0.24,0.673,-0.23);
    quad1(0.685,-0.26,0.68,-0.26,0.68,-0.27,0.7,-0.29);
    glColor3ub(252, 188, 98);
    triangle1(0.68,-0.34,0.68,-0.39,0.7,-0.38);
}
void CAR()
{
     glColor3ub(95, 138, 153);
    quad1(0.63,-0.81,0.67,-0.79,0.7,-0.9,0.66,-0.93);
    quad1(0.64,-0.83,0.68,-0.83,0.69,-0.87,0.68,-0.87);
    //triangle1(0.66,-0.33,0.7,-0.3,0.69,-0.35);
    //triangle1(0.63,-0.21,0.67,-0.19,0.64,-0.17);
    quad1(0.63,-0.81,0.67,-0.79,0.65,-0.775,0.64,-0.78);
    quad1(0.66,-0.93,0.7,-0.9,0.68,-0.94,0.67,-0.935);
   glColor3ub(82, 89, 102);
    quad1(0.63,-0.81,0.67,-0.79,0.668,-0.83,0.655,-0.84);
    quad1(0.66,-0.93,0.7,-0.9,0.68,-0.88,0.662,-0.84);
    quad1(0.634,-0.82,0.648,-0.866,0.65,-0.86,0.65,-0.84);
   quad1(0.647,-0.87,0.649,-0.87,0.657,-0.88,0.658,-0.92);
    quad1(0.672,-0.80,0.68,-0.84,0.673,-0.84,0.673,-0.83);
    quad1(0.685,-0.86,0.68,-0.86,0.68,-0.87,0.7,-0.89);

    /*glColor3ub(95, 138, 153);
    quad1(0.47,0.01,0.51,0.01,0.51,0.09,0.47,0.09);
    quad1(0.49,0.03,0.51,0.03,0.51,0.07,0.49,0.07);
    quad1(0.48,0.01,0.52,0.01,0.51,0.0,.49,0.0);
    quad1(0.48,0.09,0.52,0.09,0.51,0.1,.49,0.1);
    glColor3ub(82, 89, 102);
    quad1(0.48,0.01,0.52,0.01,0.51,0.03,0.49,0.03);
    quad1(0.48,0.09,0.52,0.09,0.51,0.07,0.49,0.07);
    quad1(0.48,0.02,0.48,0.04,0.49,0.04,0.49,0.03);
   quad1(0.48,0.05,0.49,0.05,0.49,0.06,0.48,0.08);
    quad1(0.52,0.02,0.52,0.04,0.51,0.04,0.51,0.03);
    quad1(0.51,0.05,0.52,0.05,0.52,0.07,0.51,0.06);*/
}
GLfloat car6posX = 0.0f;
GLfloat car6posY = 0.0f;
GLfloat speed8 = 0.0042f;
GLfloat speed9 = 0.02f;
void car6Move(int value) {
     if(car6posY <=-1.0f)
           {
              car6posX = -0.06f;
               car6posY =0.35f;
               }


  car6posX += speed8;
  car6posY-=speed9;
  glutPostRedisplay();
  glutTimerFunc(100, car6Move, 0);
}


GLfloat leaf1pos=0.0f;
GLfloat leaf2pos=0.0;
GLfloat leaf3pos=0.0;
GLfloat leaf4pos=0.0;
GLfloat leaf1po=0.0f;
GLfloat leaf1sp=0.01f;
GLfloat leaf1s=0.01f;
GLfloat leaf2s=0.01;
GLfloat leaf3s=0.01;
GLfloat leaf4s=0.01;
void leafMove(int value)
{
     if(leaf1pos < -0.17){
        leaf1s = 0.0f;

        if(leaf2pos < -0.18){
        leaf2s =0.0f;

        if(leaf3pos< -0.17){
        leaf3s =0.0f;

        if(leaf4pos < -0.17){
        leaf4s =0.0f;
        if(leaf1po<=-0.17){
        leaf1sp=0.0f;
           }
          leaf1po-=leaf1sp;
        }
         leaf4pos -= leaf4s;

        }
         leaf3pos -= leaf3s;


        }
         leaf2pos -= leaf2s;
        }
    leaf1pos -= leaf1s;

	glutPostRedisplay();
	glutTimerFunc(1000, leafMove, 0);
}

void leaf2Move()
{
 if(leaf1s==0)
 {
     leaf1pos=0.12;
     leaf1s = 0.01f;
 }
 if(leaf2s==0)
 {
    leaf2pos=0.14;
     leaf2s = 0.01f;
 }
 if(leaf3s==0)
 {
    leaf3pos=0.14;
     leaf3s = 0.01f;
 }
 if(leaf4s==0)
 {
    leaf4pos=0.12;
     leaf4s = 0.01f;
 }
}

//tree move
GLfloat treeE1=0.0;
GLfloat treeE2=0.0;
GLfloat treeE3=0.0;
GLfloat treeE4=0.0;
GLfloat treeE5=0.0;

GLfloat treeS1=0.01;
GLfloat treeS2=0.01;
GLfloat treeS3=0.01;
GLfloat treeS4=0.01;
GLfloat treeS5=0.01;
void treeMove(int value)
{
    if(treeE1 < -0.17){
        treeS1 = 0.0f;

        if(treeE2 < -0.17){
        treeS2 = 0.0f;

        if(treeE3 < -0.17){
        treeS3 = 0.0f;

        if(treeE4 < -0.17){
        treeS4 = 0.0f;

        if(treeE5 < -0.17){
        treeS5 = 0.0f;



        }
         treeE5 -= treeS5;

        }
         treeE4 -= treeS4;

        }
         treeE3 -= treeS3;


        }
         treeE2 -= treeS2;
        }
    treeE1 -= treeS1;

	glutPostRedisplay();
	glutTimerFunc(100, treeMove, 0);

}

void bridgeLight(){



	//---Right------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.71f, -1.0f);
	glVertex2f(0.7f, -1.0f);
	glVertex2f(0.7f, -0.3f);
	glVertex2f(0.71f, -0.3f);

	glEnd();
	//obosite
	glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.61f, -1.0f);
	glVertex2f(0.6f, -1.0f);
	glVertex2f(0.3f, -0.6f);
	glVertex2f(0.31f, -0.6f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f, -0.3f);
    glVertex2f(0.45f, 0.1f);
	glVertex2f(0.46f, 0.1f);

	glEnd();
	//2nd
	 glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);
	glVertex2f(0.31f, -0.6f);
    glVertex2f(0.3f, -0.6f);
    glVertex2f(0.42f, -0.15f);
	glVertex2f(0.43f,- 0.15f);

	glEnd();

	 //---Right1------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.66f, -0.8f);
	glVertex2f(0.65f, -0.8f);
	glVertex2f(0.71f, -0.3f);
	glVertex2f(0.70f, -0.3f);

	glEnd();
	//3rd
	glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.59f, -0.8f);
	glVertex2f(0.58f, -0.8f);
	glVertex2f(0.31f, -0.6f);
	glVertex2f(0.30f, -0.6f);

	glEnd();



    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f,  -0.3f);
    glVertex2f(0.52f, -0.2f);
	glVertex2f(0.53f, -0.2f);

	glEnd();
	//4th
	glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
  glColor3ub(29, 82, 196);
	glVertex2f(0.31f, -0.6f);
    glVertex2f(0.3f,  -0.6f);
    glVertex2f(0.44f, -0.2f);
	glVertex2f(0.45f, -0.2f);

	glEnd();


    //---Right2------

	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);

	glVertex2f(0.6f, -0.6f);
	glVertex2f(0.61f, -0.6f);
	glVertex2f(0.71f, -0.3f);
	glVertex2f(0.70f, -0.3f);

	glEnd();

	//6th
	glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);

	glVertex2f(0.48f, -0.4f);
	glVertex2f(0.47f, -0.4f);
	glVertex2f(0.31f, -0.6f);
	glVertex2f(0.30f, -0.6f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
    glColor3ub(29, 82, 196);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f, -0.3f);
    glVertex2f(0.55f, -0.4f);
	glVertex2f(0.56f, -0.4f);

	glEnd();
	//7th
	glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
    glColor3ub(29, 82, 196);
	glVertex2f(0.31f, -0.6f);
    glVertex2f(0.3f, -0.6f);
    glVertex2f(0.52f, -0.62f);
	glVertex2f(0.53f, -0.63f);

	glEnd();
    glColor3ub(184, 143, 61);
	circle1(0.69,-0.3,0.01);

	//---Left--right left----
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.91f, -1.0f);
	glVertex2f(0.9f, -1.0f);
	glVertex2f(0.9f, -0.3f);
	glVertex2f(0.91f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f, -0.3f);
    glVertex2f(0.65f, 0.1f);
	glVertex2f(0.66f, 0.1f);

	glEnd();

	//---Right1------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.86f, -0.8f);
	glVertex2f(0.85f, -0.8f);
	glVertex2f(0.91f, -0.3f);
	glVertex2f(0.90f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(29, 82, 196);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f,  -0.3f);
    glVertex2f(0.71f, -0.2f);
	glVertex2f(0.72f, -0.2f);

	glEnd();


    //---Right2------

	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(29, 82, 196);

	glVertex2f(0.8f, -0.6f);
	glVertex2f(0.81f, -0.6f);
	glVertex2f(0.91f, -0.3f);
	glVertex2f(0.90f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
    glColor3ub(29, 82, 196);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f, -0.3f);
    glVertex2f(0.75f, -0.4f);
	glVertex2f(0.76f, -0.4f);

	glEnd();



}

void snowball()
{
    circle1(-1.5,.95,.01);
    circle1(-.95,.75,.01);
    circle1(-.65,0.55,.01);
    circle1(-.35,0.46,.01);
    circle1(-.05,0.648,.01);
    circle1(.25,.83,.01);
    circle1(.55,0.8,.01);
    circle1(.75,0.35,.01);
    circle1(1.,0.26,.01);
    circle1(-.45,0.148,.01);

}
void overBridge(){
    //---Right------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.71f, -1.0f);
	glVertex2f(0.7f, -1.0f);
	glVertex2f(0.7f, -0.3f);
	glVertex2f(0.71f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(245, 243, 240);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f, -0.3f);
    glVertex2f(0.45f, 0.1f);
	glVertex2f(0.46f, 0.1f);

	glEnd();

	 //---Right1------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.66f, -0.8f);
	glVertex2f(0.65f, -0.8f);
	glVertex2f(0.71f, -0.3f);
	glVertex2f(0.70f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(245, 243, 240);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f,  -0.3f);
    glVertex2f(0.52f, -0.2f);
	glVertex2f(0.53f, -0.2f);

	glEnd();


    //---Right2------

	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.6f, -0.6f);
	glVertex2f(0.61f, -0.6f);
	glVertex2f(0.71f, -0.3f);
	glVertex2f(0.70f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
    glColor3ub(245, 243, 240);
	glVertex2f(0.71f, -0.3f);
    glVertex2f(0.7f, -0.3f);
    glVertex2f(0.55f, -0.4f);
	glVertex2f(0.56f, -0.4f);

	glEnd();


	//---Left------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.91f, -1.0f);
	glVertex2f(0.9f, -1.0f);
	glVertex2f(0.9f, -0.3f);
	glVertex2f(0.91f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(245, 243, 240);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f, -0.3f);
    glVertex2f(0.65f, 0.1f);
	glVertex2f(0.66f, 0.1f);

	glEnd();

	//---Right1------
	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.86f, -0.8f);
	glVertex2f(0.85f, -0.8f);
	glVertex2f(0.91f, -0.3f);
	glVertex2f(0.90f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
glColor3ub(245, 243, 240);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f,  -0.3f);
    glVertex2f(0.71f, -0.2f);
	glVertex2f(0.72f, -0.2f);

	glEnd();


    //---Right2------

	//GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
	glColor3ub(245, 243, 240);

	glVertex2f(0.8f, -0.6f);
	glVertex2f(0.81f, -0.6f);
	glVertex2f(0.91f, -0.3f);
	glVertex2f(0.90f, -0.3f);

	glEnd();


    //GL_QUADS
    glBegin(GL_QUADS);
	//glColor3f(0.0f, 1.0f, 1.0f);
    glColor3ub(245, 243, 240);
	glVertex2f(0.91f, -0.3f);
    glVertex2f(0.9f, -0.3f);
    glVertex2f(0.75f, -0.4f);
	glVertex2f(0.76f, -0.4f);

	glEnd();


}


void snowball2()
{
    circle1(-1.5,.95,.01);
    circle1(-.95,.75,.01);
    circle1(-.65,0.55,.01);
    circle1(-.35,0.46,.01);
    circle1(-.05,0.648,.01);
    circle1(.25,.83,.01);
    circle1(.55,0.8,.01);
    circle1(.75,0.35,.01);
    circle1(1.,0.26,.01);
    circle1(-.45,0.148,.01);

}

GLfloat snowE=3.0f;
GLfloat snowS=0.0105f;
void snowMove(int value)
{
    if(snowE < -1.0)
        snowE = 1.0f;
    snowE -= snowS;
	glutPostRedisplay();
    glutTimerFunc(100, snowMove, 0);
}

GLfloat snowE2=3.0f;
GLfloat snowS2=0.0105f;
void snowMove2(int value)
{
    if(snowE2 < -1.50)
        snowE2 = 1.0f;
    snowE2 -= snowS2;
	glutPostRedisplay();
    glutTimerFunc(100, snowMove2, 0);
}

void display3() {
glClearColor(0.614f, 0.909f, 0.949f, 0.0f); // Set background color to black and opaque
glClear(GL_COLOR_BUFFER_BIT); // Clear the color buffer (background)
glColor3f(0.0,0.0,0.0);
renderBitmapString(-0.21f, 0.82f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "01054 - COMPUTER GRAPHICS [M]");
renderBitmapString(-0.11f, 0.70f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Hatirjheel Scenario");
renderBitmapString(-0.085f, 0.56f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Group no. 03");
renderBitmapString(-0.10f, 0.43f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Group members,");

renderBitmapString(-0.40f, 0.30f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Name");
renderBitmapString(-0.04f, 0.30f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "ID");
renderBitmapString(0.30f, 0.30f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Contribution");

renderBitmapString(-0.47f, 0.20f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Sumaia Mahmuda");
renderBitmapString(-0.08f, 0.20f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "19-41622-3");
renderBitmapString(0.33f, 0.20f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "25%");

renderBitmapString(-0.47f, 0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "MT. Zubida Khatun");
renderBitmapString(-0.08f, 0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "19-41677-3");
renderBitmapString(0.33f, 0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "25%");

renderBitmapString(-0.47f, 0.0f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Tofa Hossain");
renderBitmapString(-0.08f, 0.0f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "20-41956-1");
renderBitmapString(0.33f, 0.0f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "25%");


renderBitmapString(-0.47f, -0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Rafid Redwan Khan");
renderBitmapString(-0.08f, -0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "20-42239-1");
renderBitmapString(0.33f, -0.10f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "25%");

renderBitmapString(-0.10f, -0.28f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Submitted to,");
renderBitmapString(-0.125f, -0.37f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Mahfuzur Rahman");


 glFlush(); // Render now
}

void displayName() {
//glClearColor(1.0f, 1.0f, 1.0f, 0.0f); // Set background color to black and opaque
//glClear(GL_COLOR_BUFFER_BIT); // Clear the color buffer (background)
glColor3f(1.0,0.0,1.0);
renderBitmapString(0.0f, 0.0f, 0.0f, GLUT_BITMAP_TIMES_ROMAN_24, "Hello");

 glFlush(); // Render now
}
void winterseacsion()
{    // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);
glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
	sky1();

    house();

    backcolor();
    trainpiler();
	trainline();
	wall();
	road();
	walkroad();
	grass();

	//water();


	glPushMatrix();
    glTranslatef(trainpos, 0.0f,0.0f);
    train();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car1pos, 0.0f,0.0f);
    car1();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car2pos, 0.0f,0.0f);
    car2();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car3pos, 0.0f,0.0f);
    car3();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(car4pos, 0.0f,0.0f);
    car4();
    glPopMatrix();
    glLoadIdentity();
    /*..bus move..*/
    glPushMatrix();
    glTranslatef(buspos, 0.0f,0.0f);
    bus();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(bus1pos, 0.0f,0.0f);
    bus1();
    glPopMatrix();
    glLoadIdentity();
    tree();
     leaf1flower();



    //Tree leaf4
    glPushMatrix();
    glTranslatef(0.0f,treeE3,0.0f);
    //glColor3ub(107,142,35);
    leaf4();
    leaf2Move();
    glPopMatrix();
    glLoadIdentity();

    //Tree leaf1
    glPushMatrix();
    glTranslatef(0.0f,treeE1,0.0f);
    //glColor3ub(154,205,50);
    leaf1();
    glPopMatrix();
    glLoadIdentity();

    //Tree leaf3
    glPushMatrix();
    glTranslatef(0.0f,treeE5,0.0f);
    //glColor3ub(154,205,50);
    leaf3();
    glPopMatrix();
    glLoadIdentity();

   //Tree leaf2
    glPushMatrix();
    glTranslatef(0.0f,treeE4,0.0f);
    //glColor3ub(107,142,35);
    leaf2();
    glPopMatrix();

    glLoadIdentity();


    water();
    glPushMatrix();
    glPushMatrix();
    glTranslatef(dartypo, 0.0f,0.0f);
    darty1();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo2, 0.0f,0.0f);
    darty2();
    glPopMatrix();
    glLoadIdentity();
     glPushMatrix();
    glTranslatef(dartypo3, 0.0f,0.0f);
    darty3();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo4, 0.0f,0.0f);
    darty4();
    glPopMatrix();
    glLoadIdentity();
     glPushMatrix();
    glTranslatef(dartypo5, 0.0f,0.0f);
    darty5();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo6, 0.0f,0.0f);
    darty6();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo7, 0.0f,0.0f);
    darty7();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo8, 0.0f,0.0f);
    darty8();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo9, 0.0f,0.0f);
    darty9();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo10, 0.0f,0.0f);
    darty10();
    glPopMatrix();
    glLoadIdentity();

    brize();
    cleanbridge();
//    car6();
     glPushMatrix();
    glTranslatef(car6posX, car6posY,0.0f);
    car6();
    glPopMatrix();
    glLoadIdentity();
    brizewal();
    brizelight();
    overBridge();
    light1day();
   // leaf1flower();
    glPushMatrix();
    glTranslated(0.0f,snowE,0.0f);
    glColor3ub(255, 255, 255);
    snowball();
    glTranslated(0.2,-0.5,0);snowball();
    glTranslated(-0.1,-0.45,0);snowball();
    glTranslated(0.0,-0.5,0);snowball();
    glTranslated(0.2,-0.5,0);snowball();
    glTranslated(-0.1,-0.5,0);snowball();
    glLoadIdentity();
    glTranslated(0.2,1.0,0);snowball();
    glTranslated(0.2,.2,0);snowball();
    glTranslated(-0.1,0.3,0);snowball();
    glTranslated(0.2,.4,0);snowball();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslated(0.0f,snowE2,0.0f);
    glColor3ub(255, 255, 255);
    snowball2();
    glTranslated(0.2,-0.5,0);snowball2();
    glTranslated(-0.1,-0.45,0);snowball2();
    glTranslated(0.0,-0.5,0);snowball2();
    glTranslated(0.2,-0.5,0);snowball2();
    glTranslated(-0.1,-0.5,0);snowball2();
    glLoadIdentity();
    glTranslated(0.2,1.0,0);snowball2();
    glTranslated(0.2,.2,0);snowball2();
    glTranslated(-0.1,0.3,0);snowball2();
    glTranslated(0.2,.4,0);snowball2();
    glPopMatrix();
    glLoadIdentity();

    glFlush ();
}




void display1()
{   glClear(GL_COLOR_BUFFER_BIT);
   glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    skynight();
    walkroadnight();
    roadnight();
    wallnight();
    star();
    star2();
    moon();
    trainpilernight();
    trainlinenight();
    grassnight();


    // roadnight();
    housenight();
    glPushMatrix();
    glTranslatef(trainpos, 0.0f,0.0f);
    trainnight();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car1pos, 0.0f,0.0f);
    car1night();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car2pos, 0.0f,0.0f);
    car2night();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car3pos, 0.0f,0.0f);
    car3night();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(car4pos, 0.0f,0.0f);
    car4night();
    glPopMatrix();
    glLoadIdentity();
    /*..bus move..*/
    glPushMatrix();
    glTranslatef(buspos, 0.0f,0.0f);
    busnight();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(bus1pos, 0.0f,0.0f);
    bus1night();
    glPopMatrix();
    glLoadIdentity();


   treenight();
   leaf1night();
     light1();
    waternight();
    light1night();
    brizenight();
    brizelightnight1();
    brizewal();
       glPushMatrix();
    glTranslatef(car6posX, car6posY,0.0f);
    car6night();
    glPopMatrix();
    glLoadIdentity();
    brizelightnight();
    bridgeLight();

    glFlush();
}





void display()
{
    glClearColor(1.0f, 1.0f, 1.0f, 1.0f); // Set background color to black and opaque
	glClear(GL_COLOR_BUFFER_BIT);
	sky();
	glPushMatrix();
    glTranslatef(sunXE,sunYE,0.0);
    sun();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(cloudE, 0.0f,0.0f);
    cloud();
    glPopMatrix();
    glLoadIdentity();
    house();

    backcolor();
    trainpiler();
	trainline();
	wall();
	road();
	walkroad();
	grass();

	water();


	glPushMatrix();
    glTranslatef(trainpos, 0.0f,0.0f);
    train();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car1pos, 0.0f,0.0f);
    car1();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car2pos, 0.0f,0.0f);
    car2();
    glPopMatrix();
    glLoadIdentity();

	glPushMatrix();
    glTranslatef(car3pos, 0.0f,0.0f);
    car3();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(car4pos, 0.0f,0.0f);
    car4();
    glPopMatrix();
    glLoadIdentity();



    /*..bus move..*/
    glPushMatrix();
    glTranslatef(buspos, 0.0f,0.0f);
    bus();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(bus1pos, 0.0f,0.0f);
    bus1();
    glPopMatrix();
    glLoadIdentity();
    tree();
    leaf1();
    leaf2();
    leaf3();
    leaf4();
//    leaf5();
    glPushMatrix();
    glTranslatef(dartypo, 0.0f,0.0f);
    darty1();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo2, 0.0f,0.0f);
    darty2();
    glPopMatrix();
    glLoadIdentity();
     glPushMatrix();
    glTranslatef(dartypo3, 0.0f,0.0f);
    darty3();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo4, 0.0f,0.0f);
    darty4();
    glPopMatrix();
    glLoadIdentity();
     glPushMatrix();
    glTranslatef(dartypo5, 0.0f,0.0f);
    darty5();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo6, 0.0f,0.0f);
    darty6();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo7, 0.0f,0.0f);
    darty7();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo8, 0.0f,0.0f);
    darty8();
    glPopMatrix();
    glLoadIdentity();

    glPushMatrix();
    glTranslatef(dartypo9, 0.0f,0.0f);
    darty9();
    glPopMatrix();
    glLoadIdentity();
    glPushMatrix();
    glTranslatef(dartypo10, 0.0f,0.0f);
    darty10();
    glPopMatrix();
    glLoadIdentity();


    brize();
     cleanbridge();
    glPushMatrix();
    glTranslatef(car6posX, car6posY,0.0f);
    car6();
    glPopMatrix();
    glLoadIdentity();

    //car6();
    //CAR();
    brizewal();
    brizelight();
       overBridge();
     //bridgeLight();

    light1day();
   // watershape();
	glFlush();
}
void sound()
{

   sndPlaySound("S.wav",SND_ASYNC);

}
void sound1()
{
    sndPlaySound("s1.wav",SND_ASYNC);
}
void sound2()
{
    sndPlaySound("s2.wav",SND_ASYNC);
}
void handlekeypress(unsigned char key,int x,int y)
{
    switch (key)
    {
    case 'd':
    glutDisplayFunc(display);
    sound1();
    glutPostRedisplay();
    break;

    case 'n':
    glutDisplayFunc(display1);
    sound2();
    glutPostRedisplay();
    break;

    case 'w':

    glutDisplayFunc(winterseacsion);
    glutTimerFunc(4500, treeMove, 0);
    sound();
    glutPostRedisplay();
    //glutTimerFunc(4500, leaf2Move, 0);
    break;

    }
     glutPostRedisplay();
}
bool fullscreen=false;
void SpecialInput(int key, int x, int y)
{
    switch(key)
    {
        case GLUT_KEY_UP:
            speed = speed + 0.01;
            speed2=speed2+0.01;
            speed3=speed3+0.01;
            bus1S=bus1S+0.01;
            busS=busS+0.01;
            break;

        case GLUT_KEY_DOWN:
            speed = speed - 0.01;
            speed2=speed2-0.01;
            speed3=speed3-0.01;
            bus1S=bus1S-0.01;
            busS=busS-0.01;
            break;



    }
    glutPostRedisplay();
}


void dis()
{
    glutDisplayFunc(display);
}
void dis1()
{
    glutDisplayFunc(winterseacsion);
}
/*void myInit (void)
{
//glClearColor(1.0, 1.0, 1.0, 1.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(-1,1,-1,1);
}*/

int main(int argc, char** argv) {
    cout<<"press 'n' to start night view"<<endl;
    cout<<"press 'w' to start winter view"<<endl;
    cout<<"press 'd' to start day view"<<endl;
    cout<<"press 'key_up' speed increase "<<endl;
    cout<<"press 'key_down' speed decrease"<<endl;
	glutInit(&argc, argv);                 // Initialize GLUT
    // Create a window with the given title
	 glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
     glutInitWindowSize(350,350);
    //glutInitWindowPosition (100, 150);
    glutCreateWindow("   Hatirjheel  scenario     ");
    glutDisplayFunc(dis);
   // glutCreateWindow("   Hatirjheel  scenario     ");
    //glutDisplayFunc(display3);
      // Set the window's initial width & height
	//glutDisplayFunc(dis);
	 glutTimerFunc(100, cloudMove, 0);
	 glutTimerFunc(150, sunMove, 0);
	 glutTimerFunc(10, trainMove, 0);
	 glutTimerFunc(10, car1Move, 0);
	 glutTimerFunc(10, car2Move, 0);
	 glutTimerFunc(10, car3Move, 0);
	 glutTimerFunc(10, car4Move, 0);
	 glutTimerFunc(10, car6Move, 0);
	 glutTimerFunc(10, busMove, 0);
	 glutTimerFunc(150, datrymove, 0);
     glutTimerFunc(150, datry2move, 0);
     glutTimerFunc(150, datry3move, 0);
    glutTimerFunc(150, datry4move, 0);
    glutTimerFunc(150, datry5move, 0);
     glutTimerFunc(150, datry6move, 0);
     glutTimerFunc(150, datry7move, 0);
      glutTimerFunc(150, datry8move, 0);
       glutTimerFunc(150, datry9move, 0);
    glutTimerFunc(150, datry10move, 0);

//	 glutTimerFunc(100, cloudMovenight, 0);
	 //glutTimerFunc(150, sunMove, 0);
	 glutTimerFunc(10, trainMovenight, 0);
	 glutTimerFunc(10, car1Movenight, 0);
	 glutTimerFunc(10, car2Movenight, 0);
	 glutTimerFunc(10, car3Movenight, 0);
	 glutTimerFunc(10, car4Movenight, 0);
	 glutTimerFunc(10, busMovenight, 0);
     glutTimerFunc(500, snowMove, 0);
     glutTimerFunc(500, snowMove2, 0);
      //glutTimerFunc(4000, leafMove, 0);
    // glutTimerFunc(4500, treeMove, 0);
	 glutKeyboardFunc(handlekeypress);
        glutSpecialFunc(SpecialInput);
	// myInit();
   // glutDisplayFunc(display3);
	//glutDisplayFunc(dis);
	//glutDisplayFunc(display3);
   // glutReshapeFunc(reshape);
    sndPlaySound("s1.wav",SND_ASYNC);
    glutCreateWindow("   Hatirjheel  scenario     ");
    glutDisplayFunc(display3);
	 glutIdleFunc(Idle);
	glutMainLoop();           // Enter the event-processing loop
	return 0;
}

